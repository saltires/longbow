{"version":3,"sources":["index.js"],"names":["flatten","arr","some","item","Array","isArray","_ref","concat","apply","_toConsumableArray","delay","timeout","_len","arguments","length","args","_key","clearTimeout","setTimeout","func","copyToClipboard","str","el","document","createElement","getSelection","value","debounce","setAttribute","position","style","left","body","appendChild","rangeCount","getRangeAt","select","execCommand","removeChild","addRange","selected","downoladFile","url","name","path","xhr","XMLHttpRequest","open","responseType","onload","createObjectURL","click","once","fn","flag","setCookie","site","cname","cvalue","exdays","d","Date","setTime","getTime","expires","toUTCString","cookie","getCookie","ca","split","i","c","charAt","substring","indexOf","common","parseCookie","map","v","reduce","acc","decodeURIComponent","trim","clearCookie","between","s","e","date","end","t","start","renderDate","f","k","fmt","M+","getMonth","d+","getDate","h+","getHours","H+","m+","getMinutes","s+","getSeconds","q+","Math","floor","S","getMilliseconds","test","RegExp","$1","getFullYear","substr","0","1","4","5","6","getDay","o","replace","isEqual","d1","d2","date1","date2","isLeapYear","year","getFirstDayOfMonth","day","getLastDayOfMonth","getLastDateOfMonth","getFirstDateOfMonth","getDaysInMonth","daysInMonth","m","days","t_s","parseInt","String","hours","timeStartChange","datetime","timeDifference","time1","time2","total","hour","min","ms","addDays","addHours","scrollToTop","documentElement","scrollTop","window","requestAnimationFrame","scrollTo","_a","partiallyVisible","undefined","_el$getBoundingClient","getBoundingClientRect","bottom","right","_window","innerHeight","innerWidth","top","u","navigator","userAgent","afterMin","ispc","userAgentInfo","Agents","device","elementIsVisibleInViewport","inBrowser","isIE","isIE9","isEdge","isAndroid","isIOS","isChrome","isgecko","isqq","isweixin","getUA","toLowerCase","element","className","contains","addClass","_len2","argus","_key2","Error","classList","add","_len3","_key3","remove","getScrollTop","max","getScrollLeft","scrollLeft","getElementTop","actualTop","offsetTop","current","offsetParent","getPagearea","width","scrollWidth","clientWidth","height","scrollHeight","clientHeight","error","dom","hasClass","removeClass","reg","video_url","img_url","time_24","time_12","base64","money","bank_card","name_chinese","license_plate","md5","phone_rigorous","phone_loose","email","tel","id_card","passports","username","decimal","qq_number","password","ip_v4","color_16","wx_username","zip_code","checkType","r","check","camelCase","string","stringArray","search","regCase","result","nextUpperCase","singleString","thisUpperCase","push","toUpperCase","join","match","startsWith","randomString","random","toString","hiddenNumber","frontLen","endLen","len","chinese","xing","randomNumber","Object","keys","forEach","params","GetQueryString","location","unescape","replaceQueryString","paramName","replaceWith","oUrl","href","re","eval","addQueryString","paraStr","idx","isAbsoluteURL","version","saltireUtil","assign"],"mappings":"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","file":"index.js","sourcesContent":["/**\n * @date 2020-12-04\n * @param { Array }\n * @author saltire\n * @description 多维数组扁平化\n * @return { Array }\n */\nfunction flatten(arr) {\n    while (arr.some((item) => Array.isArray(item))) {\n        arr = [].concat(...arr);\n    }\n    return arr;\n}\n/**\n * @author jxye\n * @date 2020/3/18\n * @Description: 防止函数被频繁触发，设置一个间隔时间，如果间隔时间内用户又一次触发，认为触发无效，并且重新设置间隔时间，这就是常说的防抖\n * @example: debounce(function(){console.log(this);}, 300)\n */\nfunction debounce(func, delay, ...args) {\n    let timeout;\n    return function () {\n        clearTimeout(timeout);\n        timeout = setTimeout(() => {\n            // @ts-ignore\n            func.apply(this, args);\n        }, delay);\n    };\n}\n/**\n * @date 2020-07-09\n * @author saltire\n * @description 将一个字符串复制到剪贴板\n * @param (string, 要复制的字符串)\n */\nfunction copyToClipboard(str) {\n    const el = document.createElement(\"textarea\");\n    const getSelection = document.getSelection();\n    el.value = str;\n    el.setAttribute(\"readonly\", \"\");\n    el.style.position = \"absolute\";\n    el.style.left = \"-9999px\";\n    document.body.appendChild(el);\n    const selected = getSelection.rangeCount > 0 ? getSelection.getRangeAt(0) : false;\n    el.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(el);\n    if (selected) {\n        getSelection.removeAllRanges();\n        getSelection.addRange(selected);\n    }\n}\n/**\n * @date 2020-08-17\n * @author saltire\n * @description 根据网络上的url地址下载文件\n * @param (string, 文件地址);(string, 下载后的文件名)\n */\nfunction downoladFile(url, name) {\n    const xhr = new XMLHttpRequest();\n    let path = \"\";\n    xhr.open(\"get\", url);\n    xhr.responseType = \"blob\";\n    xhr.onload = function () {\n        path = URL.createObjectURL(xhr.response);\n        const a = document.createElement(\"a\");\n        a.setAttribute(\"download\", name);\n        a.setAttribute(\"href\", path);\n        a.click();\n        URL.revokeObjectURL(path);\n    };\n    xhr.send();\n}\n/**\n * @date 2020-11-17\n * @author saltire\n * @description 控制函数只执行一次\n * @param 希望被控制的函数\n */\nfunction once(fn) {\n    let flag = false;\n    return function (...args) {\n        if (!flag) {\n            flag = true;\n            return fn(...args);\n        }\n        return;\n    };\n}\nconst common = {\n    flatten,\n    debounce,\n    copyToClipboard,\n    downoladFile,\n    once,\n};\n\n/**\n * @date 2020-06-19\n * @author saltire\n * @description 给站点设置cookie\n * @param (cname,string,键名) （cvalue，string，键值）（exdays, number, 失效时间，以天为单位）\n * @return undefined\n */\nfunction setCookie(site, cname, cvalue, exdays) {\n    const d = new Date();\n    d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);\n    const expires = \"expires=\" + d.toUTCString();\n    document.cookie =\n        cname + \"=\" + cvalue + \"; \" + expires + \"; path=/; domain=.\" + site;\n}\n/* 获取cookie */\nfunction getCookie(cname) {\n    const name = cname + \"=\";\n    const ca = document.cookie.split(\";\");\n    for (let i = 0; i < ca.length; i++) {\n        let c = ca[i];\n        while (c.charAt(0) == \" \")\n            c = c.substring(1);\n        if (c.indexOf(name) != -1)\n            return c.substring(name.length, c.length);\n    }\n    return \"\";\n}\n/* 清除某个cookie */\nfunction clearCookie(site, name) {\n    setCookie(site, name, \"\", -1);\n}\n/**\n * @date 2020-07-09\n * @author saltire\n * @description 解析 HTTP Cookie 字符串并返回所有 cookie 的 name-value 对的对象\n * @return (object)\n */\nfunction parseCookie() {\n    return document.cookie\n        .split(\";\")\n        .map((v) => v.split(\"=\"))\n        .reduce((acc, v) => {\n        acc[decodeURIComponent(v[0].trim())] = decodeURIComponent(v[1].trim());\n        return acc;\n    }, {});\n}\nconst cookie = {\n    setCookie,\n    getCookie,\n    clearCookie,\n    parseCookie,\n};\n\n/**\n * @date 2020-06-19\n * @author saltire\n * @description 判断指定日期是否在指定的开始日期和结束日期之间\n * @param (date, 指定日期) (start, 开始时间) （end， 结束时间）\n * @return boolean true false\n * @example isDuringDate('2019-02-01', 2019-01-02', '2020-08-01') => true\n */\nfunction between(d, s, e) {\n    const date = new Date(d);\n    const start = new Date(s);\n    const end = new Date(e);\n    const t = date.getTime();\n    return start.getTime() <= t && t <= end.getTime();\n}\n// 日期格式化工具函数\nfunction renderDate(d, f) {\n    const date = new Date(d);\n    let fmt = f || \"yyyy-MM-dd\";\n    const o = {\n        \"M+\": date.getMonth() + 1,\n        \"d+\": date.getDate(),\n        \"h+\": date.getHours() % 12 == 0 ? 12 : date.getHours() % 12,\n        \"H+\": date.getHours(),\n        \"m+\": date.getMinutes(),\n        \"s+\": date.getSeconds(),\n        \"q+\": Math.floor((date.getMonth() + 3) / 3),\n        S: date.getMilliseconds(), //毫秒\n    };\n    const week = {\n        \"0\": \"/u65e5\",\n        \"1\": \"/u4e00\",\n        \"2\": \"/u4e8c\",\n        \"3\": \"/u4e09\",\n        \"4\": \"/u56db\",\n        \"5\": \"/u4e94\",\n        \"6\": \"/u516d\",\n    };\n    if (/(y+)/.test(fmt)) {\n        fmt = fmt.replace(RegExp.$1, (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n    }\n    if (/(E+)/.test(fmt)) {\n        fmt = fmt.replace(RegExp.$1, (RegExp.$1.length > 1\n            ? RegExp.$1.length > 2\n                ? \"/u661f/u671f\"\n                : \"/u5468\"\n            : \"\") + week[date.getDay() + \"\"]);\n    }\n    for (const k in o) {\n        if (new RegExp(\"(\" + k + \")\").test(fmt)) {\n            fmt = fmt.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k] : (\"00\" + o[k]).substr((\"\" + o[k]).length));\n        }\n    }\n    return fmt;\n}\n/* 判断两个日期是否相等 */\nfunction isEqual(d1, d2) {\n    const date1 = new Date(d1);\n    const date2 = new Date(d2);\n    if (date1 && date2) {\n        return date1.getTime() === date2.getTime();\n    }\n    return !(date1 || date2);\n}\n/* 判断是否是闰年 */\nfunction isLeapYear(d) {\n    const date = new Date(d);\n    const year = date.getFullYear();\n    return !!((year & 3) == 0 && (year % 100 || (year % 400 == 0 && year)));\n}\n/* 返回指定年月的第一天是星期几，返回值是1-7的数字 */\nfunction getFirstDayOfMonth(d) {\n    const date = new Date(d);\n    const day = (date.getDay() - (date.getDate() - 1)) % 7;\n    return day <= 0 ? day + 7 : day;\n}\n/* 返回指定月份的最后一天是星期几，返回值是1-7的数字 */\nfunction getLastDayOfMonth(d) {\n    const date = new Date(d);\n    const day = new Date(getLastDateOfMonth(date)).getDay();\n    return day === 0 ? 7 : day;\n}\n/* 返回指定年月第一天的日期 */\nfunction getFirstDateOfMonth(d) {\n    const date = new Date(d);\n    return renderDate(new Date(date.getFullYear(), date.getMonth(), 1));\n}\n/* 返回指定年月最后一天的日期 */\nfunction getLastDateOfMonth(d) {\n    const date = new Date(d);\n    return renderDate(new Date(date.getFullYear(), date.getMonth(), getDaysInMonth(date)));\n}\n/* 获取指定月份的天数 */\nconst daysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nfunction getDaysInMonth(d) {\n    const date = new Date(d);\n    const m = date.getMonth();\n    return m == 1 && isLeapYear(date) ? 29 : daysInMonth[m];\n}\n/* 给指定日期增加指定天数 */\nfunction addDays(d, days) {\n    const date = new Date(d);\n    const t_s = date.getTime(); //转化为时间戳毫秒数\n    date.setTime(t_s + 1000 * 60 * 60 * 24 * parseInt(String(days)));\n    return date;\n}\n/* 给指定日期增加指定小时 */\nfunction addHours(d, hours) {\n    const date = new Date(d);\n    const t_s = date.getTime(); //转化为时间戳毫秒数\n    date.setTime(t_s + 1000 * 60 * 60 * parseInt(String(hours)));\n    return date;\n}\n/* 将时间转为时间戳，按当天最初一刻 */\nfunction timeStartChange(t) {\n    const d = new Date(t);\n    const datetime = d.getFullYear() +\n        \"-\" +\n        (d.getMonth() + 1) +\n        \"-\" +\n        d.getDate() +\n        \"  00:00:00\";\n    const aa = new Date(datetime);\n    const c = aa.getTime();\n    return c;\n}\n/* 将时间转为时间戳，按当天最后一刻 */\nfunction timeEndChange(t) {\n    const d = new Date(t);\n    const datetime = d.getFullYear() +\n        \"-\" +\n        (d.getMonth() + 1) +\n        \"-\" +\n        d.getDate() +\n        \"  23:59:59\";\n    const aa = new Date(datetime);\n    const c = aa.getTime();\n    return c;\n}\n// 获取时间差，提供两个时间戳，返回一个对象，为负数表示当前 time1 比 time2 小\nfunction timeDifference(time1, time2) {\n    const s1 = time1;\n    const s2 = time2;\n    const total = parseInt(String((s2 - s1) / 1000));\n    const day = parseInt(String(total / (24 * 60 * 60))); //计算整数天数\n    const afterDay = total - day * 24 * 60 * 60; //取得算出天数后剩余的秒数\n    const hour = parseInt(String(afterDay / (60 * 60))); //计算整数小时数\n    const afterHour = total - day * 24 * 60 * 60 - hour * 60 * 60; //取得算出小时数后剩余的秒数\n    const min = parseInt(String(afterHour / 60)); //计算整数分\n    const afterMin = total - day * 24 * 60 * 60 - hour * 60 * 60 - min * 60; //取得算出分后剩余的秒数\n    return {\n        day,\n        hour,\n        min,\n        ms: afterMin,\n    };\n}\nconst date = {\n    between,\n    renderDate,\n    isEqual,\n    isLeapYear,\n    getFirstDayOfMonth,\n    getFirstDateOfMonth,\n    getLastDateOfMonth,\n    getLastDayOfMonth,\n    getDaysInMonth,\n    addDays,\n    addHours,\n    timeStartChange,\n    timeEndChange,\n    timeDifference,\n};\n\n/**\n * 平滑滚动到页面顶部。\n * 使用 document.documentElement.scrollTop 或 document.body.scrollTop 获取到顶部距离。\n * 从顶部滚动一小部分距离。使用window.requestAnimationFrame() 来实现滚动动画。\n */\nfunction scrollToTop() {\n    try {\n        const c = document.documentElement.scrollTop || document.body.scrollTop;\n        if (c > 0) {\n            window.requestAnimationFrame(scrollToTop);\n            window.scrollTo(0, c - c / 8);\n        }\n    }\n    catch (_a) {\n        return;\n    }\n}\n/**\n * @date 2020-07-09\n * @author saltire\n * @description 如果指定的元素在可视窗口中可见，则返回 true ，否则返回 false\n * @param （指定元素，el）（省略第二个参数来判断元素是否完全可见，或者指定 true 来判断它是否部分可见，bolean）\n * @return boolean\n */\nfunction elementIsVisibleInViewport(el, partiallyVisible = false) {\n    try {\n        const { top, left, bottom, right } = el.getBoundingClientRect();\n        const { innerHeight, innerWidth } = window;\n        return partiallyVisible\n            ? ((top > 0 && top < innerHeight) ||\n                (bottom > 0 && bottom < innerHeight)) &&\n                ((left > 0 && left < innerWidth) || (right > 0 && right < innerWidth))\n            : top >= 0 && left >= 0 && bottom <= innerHeight && right <= innerWidth;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n// 判断是否是火狐内核\nfunction isgecko() {\n    let u;\n    try {\n        u = window.navigator && window.navigator.userAgent;\n    }\n    catch (_a) {\n        u = \"\";\n    }\n    return u.indexOf(\"Gecko\") > -1 && u.indexOf(\"KHTML\") == -1;\n}\n// 判断是否是 QQ 浏览器\nfunction isqq() {\n    let u;\n    try {\n        u = window.navigator && window.navigator.userAgent;\n    }\n    catch (_a) {\n        u = \"\";\n    }\n    return u.indexOf(\"mqqbrowser\") > -1;\n}\n// 判断是否是 QQ 浏览器\nfunction isweixin() {\n    let u;\n    try {\n        u = window.navigator && window.navigator.userAgent;\n    }\n    catch (_a) {\n        u = \"\";\n    }\n    return u.indexOf(\"MicroMessenger\") > -1;\n}\n// 判断是pc端还是移动端\nfunction ispc() {\n    let userAgentInfo;\n    try {\n        userAgentInfo = window.navigator && window.navigator.userAgent;\n    }\n    catch (_a) {\n        userAgentInfo = \"\";\n    }\n    const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n    ];\n    let flag = true;\n    for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\nconst device = {\n    scrollToTop,\n    elementIsVisibleInViewport,\n    inBrowser,\n    isIE,\n    isIE9,\n    isEdge,\n    isAndroid,\n    isIOS,\n    isChrome,\n    isgecko,\n    isqq,\n    ispc,\n    isweixin,\n};\n// Browser environment sniffing\nfunction inBrowser() {\n    return typeof window !== \"undefined\";\n}\n// 返回浏览器的 user-agent\nfunction getUA() {\n    if (inBrowser()) {\n        return window.navigator.userAgent.toLowerCase();\n    }\n    return \"\";\n}\n/**\n * 判断是否是 IE 浏览器\n */\nfunction isIE() {\n    if (getUA()) {\n        return /msie|trident/.test(getUA());\n    }\n    return false;\n}\n/**\n * 判断是否是 IE9 浏览器\n */\nfunction isIE9() {\n    if (getUA()) {\n        return getUA().indexOf(\"msie 9.0\") > 0;\n    }\n    return false;\n}\n/**\n * 判断是否是 Edge 浏览器\n */\nfunction isEdge() {\n    if (getUA()) {\n        return getUA().indexOf(\"edge/\") > 0;\n    }\n    return false;\n}\n/**\n * 判断是否是安卓环境\n */\nfunction isAndroid() {\n    if (getUA()) {\n        return getUA().indexOf(\"android\") > 0;\n    }\n    return false;\n}\n/**\n * 判断是否是 IOS 环境\n */\nfunction isIOS() {\n    if (getUA()) {\n        return /iphone|ipad|ipod|ios/.test(getUA());\n    }\n    return false;\n}\n/**\n * 判断是否是 IOS 环境\n */\nfunction isChrome() {\n    if (getUA()) {\n        return /chrome\\/\\d+/.test(getUA()) && !isEdge();\n    }\n    return false;\n}\n\n/**\n * @author jxye\n * @date 2020/3/11\n * @Description: 判断元素是否含有某个class\n * @example: hasClass(document.getElementById('content-toc'), 'content-toc') => true或false\n */\nfunction hasClass(element, className) {\n    if (!element || !className) {\n        throw new Error(\"arguments error\");\n    }\n    if (element.classList.contains(className)) {\n        return true;\n    }\n    return false;\n}\n/**\n * @author jxye\n * @date 2020/3/11\n * @Description: 原生js操作元素class的方法，给元素添加class，支持不定长参数\n */\nfunction addClass(element, ...argus) {\n    if (!element || arguments.length <= 1) {\n        throw new Error(\"arguments error\");\n    }\n    for (let i = 0; i < argus.length; i++) {\n        if (!element.classList.contains(argus[i])) {\n            element.classList.add(argus[i]);\n        }\n    }\n}\n/**\n * @author jxye\n * @date 2020/3/11\n * @Description: 原生js操作元素class的方法，删除元素的class，支持不定长参数\n */\nfunction removeClass(element, ...argus) {\n    if (!element || arguments.length <= 1) {\n        throw new Error(\"arguments error\");\n    }\n    for (let i = 0; i < argus.length; i++) {\n        if (element.classList.contains(argus[i])) {\n            element.classList.remove(argus[i]);\n        }\n    }\n}\n/**\n * 返回整个 html文档的 scrollTop 值\n * @returns number\n */\nfunction getScrollTop() {\n    return Math.max(document.body.scrollTop, document.documentElement.scrollTop);\n}\n/**\n * 返回整个 html文档的 scrollLeft 值\n * @returns number\n */\nfunction getScrollLeft() {\n    return Math.max(document.body.scrollLeft, document.documentElement.scrollLeft);\n}\n/**\n * 获取元素距页面高度\n * @param el - 指定的元素\n * @returns  number - 元素距离页面的高度\n */\nfunction getElementTop(el) {\n    let actualTop = el.offsetTop;\n    let current = el.offsetParent;\n    while (current !== null) {\n        actualTop += current.offsetTop;\n        current = current.offsetParent;\n    }\n    return actualTop;\n}\n/**\n * 获取整个网页的实际高度与宽度\n * @returns 返回一个具有 width 和 height 属性的对象或者返回 null\n */\nfunction getPagearea() {\n    try {\n        return {\n            width: Math.max(document.documentElement.scrollWidth, document.documentElement.clientWidth),\n            height: Math.max(document.documentElement.scrollHeight, document.documentElement.clientHeight),\n        };\n    }\n    catch (error) {\n        return null;\n    }\n}\nconst dom = {\n    hasClass,\n    addClass,\n    removeClass,\n    getScrollLeft,\n    getScrollTop,\n    getElementTop,\n    getPagearea,\n};\n\nconst reg = {\n    // 网址(url,支持端口和\"?+参数\"和\"#+参数)\n    url: /^(((ht|f)tps?):\\/\\/)?[\\w-]+(\\.[\\w-]+)+([\\w.,@?^=%&:/~+#-]*[\\w@?^=%&/~+#-])?$/,\n    // 视频(video)链接地址（视频格式可按需增删）\n    video_url: /^https?:\\/\\/(.+\\/)+.+(\\.(swf|avi|flv|mpg|rm|mov|wav|asf|3gp|mkv|rmvb|mp4))$/i,\n    // 图片(image)链接地址（图片格式可按需增删）\n    img_url: /^https?:\\/\\/(.+\\/)+.+(\\.(gif|png|jpg|jpeg|webp|svg|psd|bmp|tif))$/i,\n    // 24小时制时间（HH:mm:ss）\n    time_24: /^(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d$/,\n    // 12小时制时间（hh:mm:ss）\n    time_12: /^(?:1[0-2]|0?[1-9]):[0-5]\\d:[0-5]\\d$/,\n    // base64格式\n    base64: /^\\s*data:(?:[a-z]+\\/[a-z0-9-+.]+(?:;[a-z-]+=[a-z0-9-]+)?)?(?:;base64)?,([a-z0-9!$&',()*+;=\\-._~:@/?%\\s]*?)\\s*$/i,\n    // 数字/货币金额（支持负数、千分位分隔符）\n    money: /^-?\\d+(,\\d{3})*(\\.\\d{1,2})?$/,\n    // 银行卡号（10到30位, 覆盖对公/私账户, 参考微信支付）\n    bank_card: /^[1-9]\\d{9,29}$/,\n    // 中文姓名\n    name_chinese: /^(?:[\\u4e00-\\u9fa5·]{2,16})$/,\n    // 车牌号(新能源+非新能源)\n    license_plate: /^(?:[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领 A-Z]{1}[A-HJ-NP-Z]{1}(?:(?:[0-9]{5}[DF])|(?:[DF](?:[A-HJ-NP-Z0-9])[0-9]{4})))$|(?:[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领 A-Z]{1}[A-Z]{1}[A-HJ-NP-Z0-9]{4}[A-HJ-NP-Z0-9 挂学警港澳]{1})$/,\n    // md5格式(32位)\n    md5: /^([a-f\\d]{32}|[A-F\\d]{32})$/,\n    // 手机号(mobile phone)中国(严谨), 根据工信部2019年最新公布的手机号段\n    phone_rigorous: /^(?:(?:\\+|00)86)?1(?:(?:3[\\d])|(?:4[5-7|9])|(?:5[0-3|5-9])|(?:6[5-7])|(?:7[0-8])|(?:8[\\d])|(?:9[1|8|9]))\\d{8}$/,\n    // 手机号(mobile phone)中国(宽松), 只要是13,14,15,16,17,18,19开头即可\n    phone_loose: /^(?:(?:\\+|00)86)?1[3-9]\\d{9}$/,\n    // 日期 支持2020-01-02和2020/01/02这两种形式\n    date: /^\\d{4}(-|\\/)(1[0-2]|0?\\d)\\1([0-2]\\d|\\d|30|31)$/,\n    // 邮箱\n    email: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n    // 座机(tel phone)电话(国内),如: 0341-86091234\n    tel: /^\\d{3}-\\d{8}$|^\\d{4}-\\d{7,8}$/,\n    // 身份证号(2代,18位数字),最后一位是校验位,可能为数字或字符X\n    id_card: /^[1-9]\\d{5}(?:18|19|20)\\d{2}(?:0[1-9]|10|11|12)(?:0[1-9]|[1-2]\\d|30|31)\\d{3}[\\dXx]$/,\n    // 护照（包含香港、澳门）\n    passports: /(^[EeKkGgDdSsPpHh]\\d{8}$)|(^(([Ee][a-fA-F])|([DdSsPp][Ee])|([Kk][Jj])|([Mm][Aa])|(1[45]))\\d{7}$)/,\n    // 用户名校验，4到16位（字母，数字，下划线，减号）\n    username: /^[a-zA-Z0-9_-]{4,16}$/,\n    // 中文/汉字\n    chinese: /^(?:[\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uFA0E\\uFA0F\\uFA11\\uFA13\\uFA14\\uFA1F\\uFA21\\uFA23\\uFA24\\uFA27-\\uFA29]|[\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0])+$/,\n    // 小数\n    decimal: /^\\d+\\.\\d+$/,\n    // qq号码格式\n    qq_number: /^[1-9][0-9]{4,10}$/,\n    // 密码强度校验，最少6位，包括至少1个大写字母，1个小写字母，1个数字，1个特殊字符\n    password: /^\\S*(?=\\S{6,})(?=\\S*\\d)(?=\\S*[A-Z])(?=\\S*[a-z])(?=\\S*[!@#$%^&*? ])\\S*$/,\n    // ipv4地址\n    ip_v4: /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,\n    // 十六进制颜色\n    color_16: /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/,\n    // 微信号\n    wx_username: /^[a-zA-Z][-_a-zA-Z0-9]{5,19}$/,\n    // 邮政编码（中国）\n    zip_code: /^(0[1-7]|1[0-356]|2[0-7]|3[0-6]|4[0-7]|5[1-7]|6[1-7]|7[0-5]|8[013-6])\\d{4}$/,\n};\n/**\n * @date 2020-06-19\n * @author saltire\n * @description 常用正则表达式的验证\n * @param （string，待验证的字符串）\n * @return （boolean，验证结果）\n * @example  check.isphone_loose('19121673570') => true\n */\nconst checkType = function (s, r) {\n    const regNew = new RegExp(r);\n    return regNew.test(s);\n};\nconst check = {};\nObject.keys(reg).forEach(function (t) {\n    check[\"is\" + t] = function (params) {\n        return checkType(params, reg[t]);\n    };\n});\n\n/**\n * @author jxye\n * @date 2020/3/11\n * @Description: 英文字符串依序转驼峰，处理过程中遇见非英文字母字符，全部当做空格处理，其余依序拼装\n * @example: _.camelCase('Foo Bar'); => 'fooBar'\n * @example: _.camelCase('--foo-bar--'); => 'fooBar'\n * @example:  _.camelCase('FOO BAR QI#ZH');  => 'fooBarQiZh'\n */\nfunction camelCase(string) {\n    const stringArray = string.split(\"\"), start = string.search(/([a-zA-Z])/) + 1, regCase = /^[a-zA-Z]$/, result = [];\n    let nextUpperCase = false, isCase, error;\n    if (!string) {\n        error = \"camelCase调用时参数不能为空\";\n    }\n    if (start - 1 >= 0) {\n        // 推入首个字母，首个字母必须小写\n        result.push(stringArray[start - 1].toLowerCase());\n        for (let i = start; i < stringArray.length; i++) {\n            const singleString = stringArray[i];\n            const thisUpperCase = nextUpperCase;\n            isCase = regCase.test(singleString);\n            nextUpperCase = false;\n            if (isCase) {\n                if (thisUpperCase === false) {\n                    result.push(singleString.toLowerCase());\n                }\n                else {\n                    result.push(singleString.toUpperCase());\n                }\n            }\n            else {\n                nextUpperCase = true;\n            }\n        }\n    }\n    if (error) {\n        return new Error(error);\n    }\n    else if (result && result.length) {\n        return result.join(\"\");\n    }\n    return string;\n}\n/**\n * @author jxye\n * @date 2020/3/11\n * @Description: 判断某个字符串是否以某特殊字符结尾,尾部空格会被忽略\n * @example: endsWith(\"foobar\", \"bar\") // true   endsWith(\"foobar\", \"foo\") // false\n */\nfunction endsWith(str, match) {\n    if (!str || !match) {\n        return new Error(\"endsWith函数调用时参数不能为空\");\n    }\n    if (str === match) {\n        return true;\n    }\n    const reg = new RegExp(match.replace(/\\s*$/g, \"\") + \"$\");\n    return reg.test(str.replace(/\\s*$/g, \"\"));\n}\n/**\n * @author jxye\n * @date 2020/3/11\n * @Description: 判断某个字符串是否以某特殊字符开头,头部空格会被忽略\n * @example: startsWith(\"foobar\", \"fo\") // true startsWith(\"foobar\", \"v\") // false\n */\nfunction startsWith(string, match) {\n    if (!string || !match) {\n        return new Error(\"startsWith函数调用时参数不能为空\");\n    }\n    if (string === match) {\n        return true;\n    }\n    const reg = new RegExp(\"^\" + match.replace(/^\\s*/g, \"\"));\n    return reg.test(string.replace(/^\\s*/g, \"\"));\n}\n/* 生成随机字符串 */\nfunction randomString() {\n    return Math.random().toString(36).substr(2);\n}\n/**\n * @date 2020-06-19\n * @author saltire\n * @description 隐藏号码的中间一部分，常见的是隐藏中间四位\n * @param (str：号码)，(frontLen：前面的号码显示数量)，(endLen：后面的号码显示数量)\n * @return string\n * @example hiddenNumber('13901342187', 3, 4) => 139****2187\n */\nfunction hiddenNumber(str, frontLen, endLen) {\n    const len = str.length - frontLen - endLen;\n    let xing = \"\";\n    for (let i = 0; i < len; i++) {\n        xing += \"*\";\n    }\n    return str.substring(0, frontLen) + xing + str.substring(str.length - endLen);\n}\n// 生成一个[min, max]之间的随机数\nfunction randomNumber(min, max) {\n    return parseInt(String(Math.random() * (max - min + 1) + min), 10);\n}\nconst str = {\n    camelCase,\n    endsWith,\n    startsWith,\n    randomString,\n    hiddenNumber,\n    randomNumber,\n};\n\n/* 获取url中的某个参数值 */\nfunction GetQueryString(name) {\n    try {\n        const reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\");\n        const r = window.location.search.substr(1).match(reg);\n        if (r != null)\n            return unescape(r[2]);\n        return null;\n    }\n    catch (_a) {\n        return null;\n    }\n}\n/**\n * 修改url中的某个参数的值，返回新地址\n * @param paramName\n * @param replaceWith\n * @returns string\n */\nfunction replaceQueryString(paramName, replaceWith) {\n    const oUrl = window.location.href.toString();\n    const re = eval('/(' + paramName + '=)([^&]*)/gi');\n    return oUrl.replace(re, paramName + '=' + replaceWith);\n}\n/* 在URL中追加一个参数 */\nfunction addQueryString(paramName, replaceWith) {\n    try {\n        let url = window.location.href;\n        if (url.indexOf(paramName) > -1) {\n            const re = new RegExp(\"/(\" + paramName + \"=)([^&]*)/gi\");\n            url = url.replace(re, paramName + \"=\" + replaceWith);\n        }\n        else {\n            const paraStr = paramName + \"=\" + replaceWith;\n            const idx = url.indexOf(\"?\");\n            if (idx < 0)\n                url += \"?\";\n            else if (idx >= 0 && idx != url.length - 1)\n                url += \"&\";\n            url = url + paraStr;\n        }\n        return url;\n    }\n    catch (_a) {\n        return null;\n    }\n}\n/**\n * @description 是否为绝对地址,如果给定的字符串是绝对URL，则返回 true ；否则返回 false。\n * @example isAbsoluteURL('https://google.com'); // true\n * @example isAbsoluteURL('ftp://www.myserver.net'); // true\n * @example isAbsoluteURL('/foo/bar'); // false\n */\nfunction isAbsoluteURL(str) {\n    return /^[a-z][a-z0-9+.-]*:/.test(str);\n}\nconst url = {\n    GetQueryString,\n    replaceQueryString,\n    addQueryString,\n    isAbsoluteURL,\n};\n\nvar name = \"saltire-tool\";\nvar version = \"0.0.2\";\n\nconst saltireUtil = Object.assign({ name, version }, cookie, common, date, device, dom, check, str, url);\n\nexport default saltireUtil;\n"]}
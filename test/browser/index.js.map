{"version":3,"sources":["index.js"],"names":["flatten","arr","some","item","Array","isArray","_ref","concat","apply","_toConsumableArray","delay","timeout","_len","arguments","length","args","_key","clearTimeout","setTimeout","func","copyToClipboard","str","el","document","createElement","getSelection","value","debounce","setAttribute","position","style","left","body","appendChild","rangeCount","getRangeAt","select","execCommand","removeChild","addRange","selected","downoladFile","url","name","path","xhr","XMLHttpRequest","open","responseType","onload","createObjectURL","click","once","fn","flag","site","cname","cvalue","exdays","d","Date","setTime","getTime","expires","toUTCString","cookie","common","ca","split","i","c","substring","indexOf","array","forEach","clearCookie","match","setCookie","parseCookie","map","v","reduce","acc","decodeURIComponent","trim","target","result","revokeObjectURL","prototype","toString","call","toLowerCase","getCookie","between","s","e","date","start","charAt","t","end","renderDate","f","k","fmt","o","M+","getMonth","d+","getDate","h+","getHours","m+","getMinutes","s+","getSeconds","q+","Math","floor","S","getMilliseconds","test","replace","RegExp","$1","getFullYear","substr","0","1","2","3","4","5","isEqual","d1","d2","date2","date1","isLeapYear","year","getFirstDayOfMonth","day","getLastDateOfMonth","getDay","getFirstDateOfMonth","getDaysInMonth","daysInMonth","m","addDays","t_s","parseInt","String","days","addHours","hours","timeStartChange","datetime","timeEndChange","timeDifference","total","time2","time1","hour","min","getLastDayOfMonth","scrollToTop","documentElement","scrollTop","window","requestAnimationFrame","scrollTo","_a","elementIsVisibleInViewport","partiallyVisible","undefined","_el$getBoundingClient","getBoundingClientRect","bottom","right","_window","innerWidth","innerHeight","top","isgecko","u","navigator","userAgent","afterHour","isqq","ms","afterMin","userAgentInfo","Agents","device","inBrowser","isIE","isIE9","isEdge","isAndroid","isIOS","isChrome","ispc","isweixin","getUA","className","element","classList","contains","addClass","_len2","argus","_key2","add","removeClass","_len3","_key3","Error","remove","getScrollTop","max","getScrollLeft","scrollLeft","getElementTop","actualTop","offsetTop","current","offsetParent","getPagearea","width","scrollWidth","clientWidth","height","scrollHeight","clientHeight","error","dom","hasClass","reg","video_url","img_url","time_24","time_12","base64","money","bank_card","name_chinese","license_plate","md5","phone_rigorous","phone_loose","email","tel","id_card","passports","username","chinese","decimal","password","ip_v4","color_16","wx_username","zip_code","checkType","check","camelCase","string","stringArray","search","regCase","nextUpperCase","push","singleString","thisUpperCase","toUpperCase","join","startsWith","randomString","random","hiddenNumber","frontLen","endLen","len","xing","randomNumber","Object","keys","params","qq_number","r","location","unescape","replaceQueryString","paramName","replaceWith","href","re","addQueryString","paraStr","idx","isAbsoluteURL","isCase","GetQueryString","saltireUtil","assign","version"],"mappings":"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","file":"index.js","sourcesContent":["/**\n * @date 2020-12-04\n * @param { Array }\n * @author saltire\n * @description 多维数组扁平化\n * @return { Array }\n */\nfunction flatten(arr) {\n    while (arr.some((item) => Array.isArray(item))) {\n        arr = [].concat(...arr);\n    }\n    return arr;\n}\n/**\n * @author jxye\n * @date 2020/3/18\n * @Description: 防止函数被频繁触发，设置一个间隔时间，如果间隔时间内用户又一次触发，认为触发无效，并且重新设置间隔时间，这就是常说的防抖\n * @example: debounce(function(){console.log(this);}, 300)\n */\nfunction debounce(func, delay, ...args) {\n    let timeout;\n    return function () {\n        clearTimeout(timeout);\n        timeout = setTimeout(() => {\n            // @ts-ignore\n            func.apply(this, args);\n        }, delay);\n    };\n}\n/**\n * @date 2020-07-09\n * @author saltire\n * @description 将一个字符串复制到剪贴板\n * @param (string, 要复制的字符串)\n */\nfunction copyToClipboard(str) {\n    const el = document.createElement(\"textarea\");\n    const getSelection = document.getSelection();\n    el.value = str;\n    el.setAttribute(\"readonly\", \"\");\n    el.style.position = \"absolute\";\n    el.style.left = \"-9999px\";\n    document.body.appendChild(el);\n    const selected = getSelection.rangeCount > 0 ? getSelection.getRangeAt(0) : false;\n    el.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(el);\n    if (selected) {\n        getSelection.removeAllRanges();\n        getSelection.addRange(selected);\n    }\n}\n/**\n * @date 2020-08-17\n * @author saltire\n * @description 根据网络上的url地址下载文件\n * @param (string, 文件地址);(string, 下载后的文件名)\n */\nfunction downoladFile(url, name) {\n    const xhr = new XMLHttpRequest();\n    let path = \"\";\n    xhr.open(\"get\", url);\n    xhr.responseType = \"blob\";\n    xhr.onload = function () {\n        path = URL.createObjectURL(xhr.response);\n        const a = document.createElement(\"a\");\n        a.setAttribute(\"download\", name);\n        a.setAttribute(\"href\", path);\n        a.click();\n        URL.revokeObjectURL(path);\n    };\n    xhr.send();\n}\n/**\n * @date 2020-11-17\n * @author saltire\n * @description 控制函数只执行一次\n * @param 希望被控制的函数\n */\nfunction once(fn) {\n    let flag = false;\n    return function (...args) {\n        if (!flag) {\n            flag = true;\n            return fn(...args);\n        }\n        return;\n    };\n}\nconst common = {\n    flatten,\n    debounce,\n    copyToClipboard,\n    downoladFile,\n    once,\n};\n(function () {\n    const array = ['Null', 'Undefined', 'Object', 'Array', 'String', 'Number', 'Boolean', 'Function', 'RegExp', 'Date'];\n    array.forEach(function (item) {\n        common['is' + item] = function (target) {\n            const s = Object.prototype.toString.call(target);\n            const result = s.match(/\\[object (.*?)\\]/);\n            if (result && result[1]) {\n                return result[1].toLowerCase() === item.toLowerCase();\n            }\n            return false;\n        };\n    });\n}());\n\n/**\n * @date 2020-06-19\n * @author saltire\n * @description 给站点设置cookie\n * @param (cname,string,键名) （cvalue，string，键值）（exdays, number, 失效时间，以天为单位）\n * @return undefined\n */\nfunction setCookie(site, cname, cvalue, exdays) {\n    const d = new Date();\n    d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);\n    const expires = \"expires=\" + d.toUTCString();\n    document.cookie =\n        cname + \"=\" + cvalue + \"; \" + expires + \"; path=/; domain=.\" + site;\n}\n/* 获取cookie */\nfunction getCookie(cname) {\n    const name = cname + \"=\";\n    const ca = document.cookie.split(\";\");\n    for (let i = 0; i < ca.length; i++) {\n        let c = ca[i];\n        while (c.charAt(0) == \" \")\n            c = c.substring(1);\n        if (c.indexOf(name) != -1)\n            return c.substring(name.length, c.length);\n    }\n    return \"\";\n}\n/* 清除某个cookie */\nfunction clearCookie(site, name) {\n    setCookie(site, name, \"\", -1);\n}\n/**\n * @date 2020-07-09\n * @author saltire\n * @description 解析 HTTP Cookie 字符串并返回所有 cookie 的 name-value 对的对象\n * @return (object)\n */\nfunction parseCookie() {\n    return document.cookie\n        .split(\";\")\n        .map((v) => v.split(\"=\"))\n        .reduce((acc, v) => {\n        acc[decodeURIComponent(v[0].trim())] = decodeURIComponent(v[1].trim());\n        return acc;\n    }, {});\n}\nconst cookie = {\n    setCookie,\n    getCookie,\n    clearCookie,\n    parseCookie,\n};\n\n/**\n * @date 2020-06-19\n * @author saltire\n * @description 判断指定日期是否在指定的开始日期和结束日期之间\n * @param (date, 指定日期) (start, 开始时间) （end， 结束时间）\n * @return boolean true false\n * @example isDuringDate('2019-02-01', 2019-01-02', '2020-08-01') => true\n */\nfunction between(d, s, e) {\n    const date = new Date(d);\n    const start = new Date(s);\n    const end = new Date(e);\n    const t = date.getTime();\n    return start.getTime() <= t && t <= end.getTime();\n}\n// 日期格式化工具函数\nfunction renderDate(d, f) {\n    const date = new Date(d);\n    let fmt = f || \"yyyy-MM-dd\";\n    const o = {\n        \"M+\": date.getMonth() + 1,\n        \"d+\": date.getDate(),\n        \"h+\": date.getHours() % 12 == 0 ? 12 : date.getHours() % 12,\n        \"H+\": date.getHours(),\n        \"m+\": date.getMinutes(),\n        \"s+\": date.getSeconds(),\n        \"q+\": Math.floor((date.getMonth() + 3) / 3),\n        S: date.getMilliseconds(), //毫秒\n    };\n    const week = {\n        \"0\": \"/u65e5\",\n        \"1\": \"/u4e00\",\n        \"2\": \"/u4e8c\",\n        \"3\": \"/u4e09\",\n        \"4\": \"/u56db\",\n        \"5\": \"/u4e94\",\n        \"6\": \"/u516d\",\n    };\n    if (/(y+)/.test(fmt)) {\n        fmt = fmt.replace(RegExp.$1, (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n    }\n    if (/(E+)/.test(fmt)) {\n        fmt = fmt.replace(RegExp.$1, (RegExp.$1.length > 1\n            ? RegExp.$1.length > 2\n                ? \"/u661f/u671f\"\n                : \"/u5468\"\n            : \"\") + week[date.getDay() + \"\"]);\n    }\n    for (const k in o) {\n        if (new RegExp(\"(\" + k + \")\").test(fmt)) {\n            fmt = fmt.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k] : (\"00\" + o[k]).substr((\"\" + o[k]).length));\n        }\n    }\n    return fmt;\n}\n/* 判断两个日期是否相等 */\nfunction isEqual(d1, d2) {\n    const date1 = new Date(d1);\n    const date2 = new Date(d2);\n    if (date1 && date2) {\n        return date1.getTime() === date2.getTime();\n    }\n    return !(date1 || date2);\n}\n/* 判断是否是闰年 */\nfunction isLeapYear(d) {\n    const date = new Date(d);\n    const year = date.getFullYear();\n    return !!((year & 3) == 0 && (year % 100 || (year % 400 == 0 && year)));\n}\n/* 返回指定年月的第一天是星期几，返回值是1-7的数字 */\nfunction getFirstDayOfMonth(d) {\n    const date = new Date(d);\n    const day = (date.getDay() - (date.getDate() - 1)) % 7;\n    return day <= 0 ? day + 7 : day;\n}\n/* 返回指定月份的最后一天是星期几，返回值是1-7的数字 */\nfunction getLastDayOfMonth(d) {\n    const date = new Date(d);\n    const day = new Date(getLastDateOfMonth(date)).getDay();\n    return day === 0 ? 7 : day;\n}\n/* 返回指定年月第一天的日期 */\nfunction getFirstDateOfMonth(d) {\n    const date = new Date(d);\n    return renderDate(new Date(date.getFullYear(), date.getMonth(), 1));\n}\n/* 返回指定年月最后一天的日期 */\nfunction getLastDateOfMonth(d) {\n    const date = new Date(d);\n    return renderDate(new Date(date.getFullYear(), date.getMonth(), getDaysInMonth(date)));\n}\n/* 获取指定月份的天数 */\nconst daysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nfunction getDaysInMonth(d) {\n    const date = new Date(d);\n    const m = date.getMonth();\n    return m == 1 && isLeapYear(date) ? 29 : daysInMonth[m];\n}\n/* 给指定日期增加指定天数 */\nfunction addDays(d, days) {\n    const date = new Date(d);\n    const t_s = date.getTime(); //转化为时间戳毫秒数\n    date.setTime(t_s + 1000 * 60 * 60 * 24 * parseInt(String(days)));\n    return date;\n}\n/* 给指定日期增加指定小时 */\nfunction addHours(d, hours) {\n    const date = new Date(d);\n    const t_s = date.getTime(); //转化为时间戳毫秒数\n    date.setTime(t_s + 1000 * 60 * 60 * parseInt(String(hours)));\n    return date;\n}\n/* 将时间转为时间戳，按当天最初一刻 */\nfunction timeStartChange(t) {\n    const d = new Date(t);\n    const datetime = d.getFullYear() +\n        \"-\" +\n        (d.getMonth() + 1) +\n        \"-\" +\n        d.getDate() +\n        \"  00:00:00\";\n    const aa = new Date(datetime);\n    const c = aa.getTime();\n    return c;\n}\n/* 将时间转为时间戳，按当天最后一刻 */\nfunction timeEndChange(t) {\n    const d = new Date(t);\n    const datetime = d.getFullYear() +\n        \"-\" +\n        (d.getMonth() + 1) +\n        \"-\" +\n        d.getDate() +\n        \"  23:59:59\";\n    const aa = new Date(datetime);\n    const c = aa.getTime();\n    return c;\n}\n// 获取时间差，提供两个时间戳，返回一个对象，为负数表示当前 time1 比 time2 小\nfunction timeDifference(time1, time2) {\n    const s1 = time1;\n    const s2 = time2;\n    const total = parseInt(String((s2 - s1) / 1000));\n    const day = parseInt(String(total / (24 * 60 * 60))); //计算整数天数\n    const afterDay = total - day * 24 * 60 * 60; //取得算出天数后剩余的秒数\n    const hour = parseInt(String(afterDay / (60 * 60))); //计算整数小时数\n    const afterHour = total - day * 24 * 60 * 60 - hour * 60 * 60; //取得算出小时数后剩余的秒数\n    const min = parseInt(String(afterHour / 60)); //计算整数分\n    const afterMin = total - day * 24 * 60 * 60 - hour * 60 * 60 - min * 60; //取得算出分后剩余的秒数\n    return {\n        day,\n        hour,\n        min,\n        ms: afterMin,\n    };\n}\nconst date = {\n    between,\n    renderDate,\n    isEqual,\n    isLeapYear,\n    getFirstDayOfMonth,\n    getFirstDateOfMonth,\n    getLastDateOfMonth,\n    getLastDayOfMonth,\n    getDaysInMonth,\n    addDays,\n    addHours,\n    timeStartChange,\n    timeEndChange,\n    timeDifference,\n};\n\n/**\n * 平滑滚动到页面顶部。\n * 使用 document.documentElement.scrollTop 或 document.body.scrollTop 获取到顶部距离。\n * 从顶部滚动一小部分距离。使用window.requestAnimationFrame() 来实现滚动动画。\n */\nfunction scrollToTop() {\n    try {\n        const c = document.documentElement.scrollTop || document.body.scrollTop;\n        if (c > 0) {\n            window.requestAnimationFrame(scrollToTop);\n            window.scrollTo(0, c - c / 8);\n        }\n    }\n    catch (_a) {\n        return;\n    }\n}\n/**\n * @date 2020-07-09\n * @author saltire\n * @description 如果指定的元素在可视窗口中可见，则返回 true ，否则返回 false\n * @param （指定元素，el）（省略第二个参数来判断元素是否完全可见，或者指定 true 来判断它是否部分可见，bolean）\n * @return boolean\n */\nfunction elementIsVisibleInViewport(el, partiallyVisible = false) {\n    try {\n        const { top, left, bottom, right } = el.getBoundingClientRect();\n        const { innerHeight, innerWidth } = window;\n        return partiallyVisible\n            ? ((top > 0 && top < innerHeight) ||\n                (bottom > 0 && bottom < innerHeight)) &&\n                ((left > 0 && left < innerWidth) || (right > 0 && right < innerWidth))\n            : top >= 0 && left >= 0 && bottom <= innerHeight && right <= innerWidth;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n// 判断是否是火狐内核\nfunction isgecko() {\n    let u;\n    try {\n        u = window.navigator && window.navigator.userAgent;\n    }\n    catch (_a) {\n        u = \"\";\n    }\n    return u.indexOf(\"Gecko\") > -1 && u.indexOf(\"KHTML\") == -1;\n}\n// 判断是否是 QQ 浏览器\nfunction isqq() {\n    let u;\n    try {\n        u = window.navigator && window.navigator.userAgent;\n    }\n    catch (_a) {\n        u = \"\";\n    }\n    return u.indexOf(\"mqqbrowser\") > -1;\n}\n// 判断是否是 QQ 浏览器\nfunction isweixin() {\n    let u;\n    try {\n        u = window.navigator && window.navigator.userAgent;\n    }\n    catch (_a) {\n        u = \"\";\n    }\n    return u.indexOf(\"MicroMessenger\") > -1;\n}\n// 判断是pc端还是移动端\nfunction ispc() {\n    let userAgentInfo;\n    try {\n        userAgentInfo = window.navigator && window.navigator.userAgent;\n    }\n    catch (_a) {\n        userAgentInfo = \"\";\n    }\n    const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n    ];\n    let flag = true;\n    for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\nconst device = {\n    scrollToTop,\n    elementIsVisibleInViewport,\n    inBrowser,\n    isIE,\n    isIE9,\n    isEdge,\n    isAndroid,\n    isIOS,\n    isChrome,\n    isgecko,\n    isqq,\n    ispc,\n    isweixin,\n};\n// Browser environment sniffing\nfunction inBrowser() {\n    return typeof window !== \"undefined\";\n}\n// 返回浏览器的 user-agent\nfunction getUA() {\n    if (inBrowser()) {\n        return window.navigator.userAgent.toLowerCase();\n    }\n    return \"\";\n}\n/**\n * 判断是否是 IE 浏览器\n */\nfunction isIE() {\n    if (getUA()) {\n        return /msie|trident/.test(getUA());\n    }\n    return false;\n}\n/**\n * 判断是否是 IE9 浏览器\n */\nfunction isIE9() {\n    if (getUA()) {\n        return getUA().indexOf(\"msie 9.0\") > 0;\n    }\n    return false;\n}\n/**\n * 判断是否是 Edge 浏览器\n */\nfunction isEdge() {\n    if (getUA()) {\n        return getUA().indexOf(\"edge/\") > 0;\n    }\n    return false;\n}\n/**\n * 判断是否是安卓环境\n */\nfunction isAndroid() {\n    if (getUA()) {\n        return getUA().indexOf(\"android\") > 0;\n    }\n    return false;\n}\n/**\n * 判断是否是 IOS 环境\n */\nfunction isIOS() {\n    if (getUA()) {\n        return /iphone|ipad|ipod|ios/.test(getUA());\n    }\n    return false;\n}\n/**\n * 判断是否是 IOS 环境\n */\nfunction isChrome() {\n    if (getUA()) {\n        return /chrome\\/\\d+/.test(getUA()) && !isEdge();\n    }\n    return false;\n}\n\n/**\n * @author jxye\n * @date 2020/3/11\n * @Description: 判断元素是否含有某个class\n * @example: hasClass(document.getElementById('content-toc'), 'content-toc') => true或false\n */\nfunction hasClass(element, className) {\n    if (!element || !className) {\n        throw new Error(\"arguments error\");\n    }\n    if (element.classList.contains(className)) {\n        return true;\n    }\n    return false;\n}\n/**\n * @author jxye\n * @date 2020/3/11\n * @Description: 原生js操作元素class的方法，给元素添加class，支持不定长参数\n */\nfunction addClass(element, ...argus) {\n    if (!element || arguments.length <= 1) {\n        throw new Error(\"arguments error\");\n    }\n    for (let i = 0; i < argus.length; i++) {\n        if (!element.classList.contains(argus[i])) {\n            element.classList.add(argus[i]);\n        }\n    }\n}\n/**\n * @author jxye\n * @date 2020/3/11\n * @Description: 原生js操作元素class的方法，删除元素的class，支持不定长参数\n */\nfunction removeClass(element, ...argus) {\n    if (!element || arguments.length <= 1) {\n        throw new Error(\"arguments error\");\n    }\n    for (let i = 0; i < argus.length; i++) {\n        if (element.classList.contains(argus[i])) {\n            element.classList.remove(argus[i]);\n        }\n    }\n}\n/**\n * 返回整个 html文档的 scrollTop 值\n * @returns number\n */\nfunction getScrollTop() {\n    return Math.max(document.body.scrollTop, document.documentElement.scrollTop);\n}\n/**\n * 返回整个 html文档的 scrollLeft 值\n * @returns number\n */\nfunction getScrollLeft() {\n    return Math.max(document.body.scrollLeft, document.documentElement.scrollLeft);\n}\n/**\n * 获取元素距页面高度\n * @param el - 指定的元素\n * @returns  number - 元素距离页面的高度\n */\nfunction getElementTop(el) {\n    let actualTop = el.offsetTop;\n    let current = el.offsetParent;\n    while (current !== null) {\n        actualTop += current.offsetTop;\n        current = current.offsetParent;\n    }\n    return actualTop;\n}\n/**\n * 获取整个网页的实际高度与宽度\n * @returns 返回一个具有 width 和 height 属性的对象或者返回 null\n */\nfunction getPagearea() {\n    try {\n        return {\n            width: Math.max(document.documentElement.scrollWidth, document.documentElement.clientWidth),\n            height: Math.max(document.documentElement.scrollHeight, document.documentElement.clientHeight),\n        };\n    }\n    catch (error) {\n        return null;\n    }\n}\nconst dom = {\n    hasClass,\n    addClass,\n    removeClass,\n    getScrollLeft,\n    getScrollTop,\n    getElementTop,\n    getPagearea,\n};\n\nconst reg = {\n    // 网址(url,支持端口和\"?+参数\"和\"#+参数)\n    url: /^(((ht|f)tps?):\\/\\/)?[\\w-]+(\\.[\\w-]+)+([\\w.,@?^=%&:/~+#-]*[\\w@?^=%&/~+#-])?$/,\n    // 视频(video)链接地址（视频格式可按需增删）\n    video_url: /^https?:\\/\\/(.+\\/)+.+(\\.(swf|avi|flv|mpg|rm|mov|wav|asf|3gp|mkv|rmvb|mp4))$/i,\n    // 图片(image)链接地址（图片格式可按需增删）\n    img_url: /^https?:\\/\\/(.+\\/)+.+(\\.(gif|png|jpg|jpeg|webp|svg|psd|bmp|tif))$/i,\n    // 24小时制时间（HH:mm:ss）\n    time_24: /^(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d$/,\n    // 12小时制时间（hh:mm:ss）\n    time_12: /^(?:1[0-2]|0?[1-9]):[0-5]\\d:[0-5]\\d$/,\n    // base64格式\n    base64: /^\\s*data:(?:[a-z]+\\/[a-z0-9-+.]+(?:;[a-z-]+=[a-z0-9-]+)?)?(?:;base64)?,([a-z0-9!$&',()*+;=\\-._~:@/?%\\s]*?)\\s*$/i,\n    // 数字/货币金额（支持负数、千分位分隔符）\n    money: /^-?\\d+(,\\d{3})*(\\.\\d{1,2})?$/,\n    // 银行卡号（10到30位, 覆盖对公/私账户, 参考微信支付）\n    bank_card: /^[1-9]\\d{9,29}$/,\n    // 中文姓名\n    name_chinese: /^(?:[\\u4e00-\\u9fa5·]{2,16})$/,\n    // 车牌号(新能源+非新能源)\n    license_plate: /^(?:[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领 A-Z]{1}[A-HJ-NP-Z]{1}(?:(?:[0-9]{5}[DF])|(?:[DF](?:[A-HJ-NP-Z0-9])[0-9]{4})))$|(?:[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领 A-Z]{1}[A-Z]{1}[A-HJ-NP-Z0-9]{4}[A-HJ-NP-Z0-9 挂学警港澳]{1})$/,\n    // md5格式(32位)\n    md5: /^([a-f\\d]{32}|[A-F\\d]{32})$/,\n    // 手机号(mobile phone)中国(严谨), 根据工信部2019年最新公布的手机号段\n    phone_rigorous: /^(?:(?:\\+|00)86)?1(?:(?:3[\\d])|(?:4[5-7|9])|(?:5[0-3|5-9])|(?:6[5-7])|(?:7[0-8])|(?:8[\\d])|(?:9[1|8|9]))\\d{8}$/,\n    // 手机号(mobile phone)中国(宽松), 只要是13,14,15,16,17,18,19开头即可\n    phone_loose: /^(?:(?:\\+|00)86)?1[3-9]\\d{9}$/,\n    // 日期 支持2020-01-02和2020/01/02这两种形式\n    date: /^\\d{4}(-|\\/)(1[0-2]|0?\\d)\\1([0-2]\\d|\\d|30|31)$/,\n    // 邮箱\n    email: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n    // 座机(tel phone)电话(国内),如: 0341-86091234\n    tel: /^\\d{3}-\\d{8}$|^\\d{4}-\\d{7,8}$/,\n    // 身份证号(2代,18位数字),最后一位是校验位,可能为数字或字符X\n    id_card: /^[1-9]\\d{5}(?:18|19|20)\\d{2}(?:0[1-9]|10|11|12)(?:0[1-9]|[1-2]\\d|30|31)\\d{3}[\\dXx]$/,\n    // 护照（包含香港、澳门）\n    passports: /(^[EeKkGgDdSsPpHh]\\d{8}$)|(^(([Ee][a-fA-F])|([DdSsPp][Ee])|([Kk][Jj])|([Mm][Aa])|(1[45]))\\d{7}$)/,\n    // 用户名校验，4到16位（字母，数字，下划线，减号）\n    username: /^[a-zA-Z0-9_-]{4,16}$/,\n    // 中文/汉字\n    chinese: /^(?:[\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uFA0E\\uFA0F\\uFA11\\uFA13\\uFA14\\uFA1F\\uFA21\\uFA23\\uFA24\\uFA27-\\uFA29]|[\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0])+$/,\n    // 小数\n    decimal: /^\\d+\\.\\d+$/,\n    // qq号码格式\n    qq_number: /^[1-9][0-9]{4,10}$/,\n    // 密码强度校验，最少6位，包括至少1个大写字母，1个小写字母，1个数字，1个特殊字符\n    password: /^\\S*(?=\\S{6,})(?=\\S*\\d)(?=\\S*[A-Z])(?=\\S*[a-z])(?=\\S*[!@#$%^&*? ])\\S*$/,\n    // ipv4地址\n    ip_v4: /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,\n    // 十六进制颜色\n    color_16: /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/,\n    // 微信号\n    wx_username: /^[a-zA-Z][-_a-zA-Z0-9]{5,19}$/,\n    // 邮政编码（中国）\n    zip_code: /^(0[1-7]|1[0-356]|2[0-7]|3[0-6]|4[0-7]|5[1-7]|6[1-7]|7[0-5]|8[013-6])\\d{4}$/,\n};\n/**\n * @date 2020-06-19\n * @author saltire\n * @description 常用正则表达式的验证\n * @param （string，待验证的字符串）\n * @return （boolean，验证结果）\n * @example  check.isphone_loose('19121673570') => true\n */\nconst checkType = function (s, r) {\n    const regNew = new RegExp(r);\n    return regNew.test(s);\n};\nconst check = {};\nObject.keys(reg).forEach(function (t) {\n    check[\"is\" + t] = function (params) {\n        return checkType(params, reg[t]);\n    };\n});\n\n/**\n * @author jxye\n * @date 2020/3/11\n * @Description: 英文字符串依序转驼峰，处理过程中遇见非英文字母字符，全部当做空格处理，其余依序拼装\n * @example: _.camelCase('Foo Bar'); => 'fooBar'\n * @example: _.camelCase('--foo-bar--'); => 'fooBar'\n * @example:  _.camelCase('FOO BAR QI#ZH');  => 'fooBarQiZh'\n */\nfunction camelCase(string) {\n    const stringArray = string.split(\"\"), start = string.search(/([a-zA-Z])/) + 1, regCase = /^[a-zA-Z]$/, result = [];\n    let nextUpperCase = false, isCase, error;\n    if (!string) {\n        error = \"camelCase调用时参数不能为空\";\n    }\n    if (start - 1 >= 0) {\n        // 推入首个字母，首个字母必须小写\n        result.push(stringArray[start - 1].toLowerCase());\n        for (let i = start; i < stringArray.length; i++) {\n            const singleString = stringArray[i];\n            const thisUpperCase = nextUpperCase;\n            isCase = regCase.test(singleString);\n            nextUpperCase = false;\n            if (isCase) {\n                if (thisUpperCase === false) {\n                    result.push(singleString.toLowerCase());\n                }\n                else {\n                    result.push(singleString.toUpperCase());\n                }\n            }\n            else {\n                nextUpperCase = true;\n            }\n        }\n    }\n    if (error) {\n        return new Error(error);\n    }\n    else if (result && result.length) {\n        return result.join(\"\");\n    }\n    return string;\n}\n/**\n * @author jxye\n * @date 2020/3/11\n * @Description: 判断某个字符串是否以某特殊字符结尾,尾部空格会被忽略\n * @example: endsWith(\"foobar\", \"bar\") // true   endsWith(\"foobar\", \"foo\") // false\n */\nfunction endsWith(str, match) {\n    if (!str || !match) {\n        return new Error(\"endsWith函数调用时参数不能为空\");\n    }\n    if (str === match) {\n        return true;\n    }\n    const reg = new RegExp(match.replace(/\\s*$/g, \"\") + \"$\");\n    return reg.test(str.replace(/\\s*$/g, \"\"));\n}\n/**\n * @author jxye\n * @date 2020/3/11\n * @Description: 判断某个字符串是否以某特殊字符开头,头部空格会被忽略\n * @example: startsWith(\"foobar\", \"fo\") // true startsWith(\"foobar\", \"v\") // false\n */\nfunction startsWith(string, match) {\n    if (!string || !match) {\n        return new Error(\"startsWith函数调用时参数不能为空\");\n    }\n    if (string === match) {\n        return true;\n    }\n    const reg = new RegExp(\"^\" + match.replace(/^\\s*/g, \"\"));\n    return reg.test(string.replace(/^\\s*/g, \"\"));\n}\n/* 生成随机字符串 */\nfunction randomString() {\n    return Math.random().toString(36).substr(2);\n}\n/**\n * @date 2020-06-19\n * @author saltire\n * @description 隐藏号码的中间一部分，常见的是隐藏中间四位\n * @param (str：号码)，(frontLen：前面的号码显示数量)，(endLen：后面的号码显示数量)\n * @return string\n * @example hiddenNumber('13901342187', 3, 4) => 139****2187\n */\nfunction hiddenNumber(str, frontLen, endLen) {\n    const len = str.length - frontLen - endLen;\n    let xing = \"\";\n    for (let i = 0; i < len; i++) {\n        xing += \"*\";\n    }\n    return str.substring(0, frontLen) + xing + str.substring(str.length - endLen);\n}\n// 生成一个[min, max]之间的随机数\nfunction randomNumber(min, max) {\n    return parseInt(String(Math.random() * (max - min + 1) + min), 10);\n}\nconst str = {\n    camelCase,\n    endsWith,\n    startsWith,\n    randomString,\n    hiddenNumber,\n    randomNumber,\n};\n\n/* 获取url中的某个参数值 */\nfunction GetQueryString(name) {\n    try {\n        const reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\");\n        const r = window.location.search.substr(1).match(reg);\n        if (r != null)\n            return unescape(r[2]);\n        return null;\n    }\n    catch (_a) {\n        return null;\n    }\n}\n/**\n * 修改url中的某个参数的值，返回新地址\n * @param paramName\n * @param replaceWith\n * @returns string\n */\nfunction replaceQueryString(paramName, replaceWith) {\n    const oUrl = window.location.href.toString();\n    const re = eval(\"/(\" + paramName + \"=)([^&]*)/gi\");\n    return oUrl.replace(re, paramName + \"=\" + replaceWith);\n}\n/* 在URL中追加一个参数 */\nfunction addQueryString(paramName, replaceWith) {\n    try {\n        let url = window.location.href;\n        if (url.indexOf(paramName) > -1) {\n            const re = new RegExp(\"/(\" + paramName + \"=)([^&]*)/gi\");\n            url = url.replace(re, paramName + \"=\" + replaceWith);\n        }\n        else {\n            const paraStr = paramName + \"=\" + replaceWith;\n            const idx = url.indexOf(\"?\");\n            if (idx < 0)\n                url += \"?\";\n            else if (idx >= 0 && idx != url.length - 1)\n                url += \"&\";\n            url = url + paraStr;\n        }\n        return url;\n    }\n    catch (_a) {\n        return null;\n    }\n}\n/**\n * @description 是否为绝对地址,如果给定的字符串是绝对URL，则返回 true ；否则返回 false。\n * @example isAbsoluteURL('https://google.com'); // true\n * @example isAbsoluteURL('ftp://www.myserver.net'); // true\n * @example isAbsoluteURL('/foo/bar'); // false\n */\nfunction isAbsoluteURL(str) {\n    return /^[a-z][a-z0-9+.-]*:/.test(str);\n}\nconst url = {\n    GetQueryString,\n    replaceQueryString,\n    addQueryString,\n    isAbsoluteURL,\n};\n\nvar name = \"saltire-tool\";\nvar version = \"0.0.2\";\n\nconst saltireUtil = Object.assign({ name, version }, cookie, common, date, device, dom, check, str, url);\n\nexport default saltireUtil;\n"]}
{"version":3,"sources":["node_modules/browser-pack/_prelude.js","package.json","src/common/index.ts","src/cookie/index.ts","src/date/index.ts","src/device/index.ts","src/dom/index.ts","src/index.ts","src/regexp/index.ts","src/string/index.ts","src/url/index.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","name","version","description","main","repository","author","license","devDependencies","@babel/core","@babel/preset-env","@commitlint/cli","@commitlint/config-conventional","@types/jest","@typescript-eslint/eslint-plugin","@typescript-eslint/parser","babelify","browserify","conventional-changelog","conventional-changelog-cli","copy","cz-conventional-changelog","del","eslint","eslint-config-prettier","exec-sh","gulp","gulp-concat","gulp-sourcemaps","gulp-typescript","gulp-uglify","husky","jest","lint-staged","merge2","prettier","puppeteer","rimraf","ts-jest","tsify","typescript","vinyl-buffer","vinyl-source-stream","vuepress","config","commitizen","path","hooks","commit-msg","pre-commit","*.ts","scripts","log","build","dev","lint","test","docs:dev","docs:build","pub","common","flatten","arr","some","item","Array","isArray","_ref","concat","apply","_toConsumableArray","debounce","func","delay","timeout","_len","arguments","args","_key","_this","this","clearTimeout","setTimeout","copyToClipboard","str","el","document","createElement","getSelection","value","setAttribute","style","position","left","body","appendChild","selected","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange","downoladFile","url","xhr","XMLHttpRequest","open","responseType","onload","URL","createObjectURL","response","click","revokeObjectURL","send","once","fn","flag","setCookie","site","cname","cvalue","exdays","d","Date","setTime","getTime","expires","toUTCString","cookie","getCookie","ca","split","charAt","substring","indexOf","clearCookie","parseCookie","map","v","reduce","acc","decodeURIComponent","trim","renderDate","k","date","fmt","M+","getMonth","d+","getDate","h+","getHours","H+","m+","getMinutes","s+","getSeconds","q+","Math","floor","S","getMilliseconds","replace","RegExp","$1","getFullYear","substr","0","2","3","4","5","6","getDay","isLeapYear","year","getLastDateOfMonth","getDaysInMonth","daysInMonth","m","between","s","start","end","isEqual","d1","d2","date1","date2","getFirstDayOfMonth","day","getFirstDateOfMonth","getLastDayOfMonth","addDays","days","t_s","parseInt","String","addHours","hours","timeStartChange","datetime","timeEndChange","timeDifference","time1","time2","total","hour","min","ms","device","scrollToTop","documentElement","scrollTop","window","requestAnimationFrame","scrollTo","_a","elementIsVisibleInViewport","partiallyVisible","undefined","_el$getBoundingClient","getBoundingClientRect","top","bottom","right","_window","innerHeight","innerWidth","inBrowser","isIE","getUA","isIE9","isEdge","isAndroid","isIOS","isChrome","isgecko","navigator","userAgent","isqq","ispc","userAgentInfo","Agents","isweixin","toLowerCase","dom","hasClass","element","className","classList","contains","addClass","argus","add","removeClass","_len2","_key2","remove","getScrollLeft","max","scrollLeft","getScrollTop","getElementTop","actualTop","offsetTop","current","offsetParent","getPagearea","width","scrollWidth","clientWidth","height","scrollHeight","clientHeight","error","common_1","cookie_1","date_1","device_1","dom_1","regexp_1","string_1","url_1","package_json_1","saltireUtil","Object","assign","check","reg","video_url","img_url","time_24","time_12","base64","money","bank_card","name_chinese","license_plate","md5","phone_rigorous","phone_loose","email","tel","id_card","passports","username","chinese","decimal","qq_number","password","ip_v4","color_16","wx_username","zip_code","keys","forEach","params","camelCase","string","stringArray","search","regCase","result","nextUpperCase","push","singleString","thisUpperCase","toUpperCase","join","endsWith","match","startsWith","randomString","random","toString","hiddenNumber","frontLen","endLen","len","xing","randomNumber","GetQueryString","location","unescape","replaceQueryString","paramName","replaceWith","oUrl","href","re","addQueryString","paraStr","idx","_url","isAbsoluteURL"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","module.exports={\n  \"name\": \"saltire-util\",\n  \"version\": \"0.0.1\",\n  \"description\": \"A set of easy to use and suggestive JavaScript tool library\",\n  \"main\": \"index.js\",\n  \"repository\": \"git@github.com:saltires/saltire-util.git\",\n  \"author\": \"saltire<ye998102@163.com>\",\n  \"license\": \"MIT\",\n  \"devDependencies\": {\n    \"@babel/core\": \"^7.13.8\",\n    \"@babel/preset-env\": \"^7.13.9\",\n    \"@commitlint/cli\": \"^12.0.1\",\n    \"@commitlint/config-conventional\": \"^12.0.1\",\n    \"@types/jest\": \"^26.0.20\",\n    \"@typescript-eslint/eslint-plugin\": \"^4.16.1\",\n    \"@typescript-eslint/parser\": \"^4.16.1\",\n    \"babelify\": \"^10.0.0\",\n    \"browserify\": \"^17.0.0\",\n    \"conventional-changelog\": \"^3.1.24\",\n    \"conventional-changelog-cli\": \"^2.1.1\",\n    \"copy\": \"^0.3.2\",\n    \"cz-conventional-changelog\": \"^3.3.0\",\n    \"del\": \"^6.0.0\",\n    \"eslint\": \"^7.21.0\",\n    \"eslint-config-prettier\": \"^8.1.0\",\n    \"exec-sh\": \"^0.3.4\",\n    \"gulp\": \"^4.0.2\",\n    \"gulp-concat\": \"^2.6.1\",\n    \"gulp-sourcemaps\": \"^3.0.0\",\n    \"gulp-typescript\": \"^6.0.0-alpha.1\",\n    \"gulp-uglify\": \"^3.0.2\",\n    \"husky\": \"4.2.5\",\n    \"jest\": \"^26.6.3\",\n    \"lint-staged\": \"^10.5.4\",\n    \"merge2\": \"^1.4.1\",\n    \"prettier\": \"^2.2.1\",\n    \"puppeteer\": \"^8.0.0\",\n    \"rimraf\": \"^3.0.2\",\n    \"ts-jest\": \"^26.5.3\",\n    \"tsify\": \"^5.0.2\",\n    \"typescript\": \"^4.2.3\",\n    \"vinyl-buffer\": \"^1.0.1\",\n    \"vinyl-source-stream\": \"^2.0.0\",\n    \"vuepress\": \"^1.8.2\"\n  },\n  \"config\": {\n    \"commitizen\": {\n      \"path\": \"./node_modules/cz-conventional-changelog\"\n    }\n  },\n  \"husky\": {\n    \"hooks\": {\n      \"commit-msg\": \"commitlint -E HUSKY_GIT_PARAMS\",\n      \"pre-commit\": \"lint-staged\"\n    }\n  },\n  \"lint-staged\": {\n    \"*.ts\": [\n      \"yarn lint\",\n      \"yarn prettier\"\n    ]\n  },\n  \"scripts\": {\n    \"log\": \"rimraf CHANGELOG.md && conventional-changelog -p angular -i CHANGELOG.md -s && git add CHANGELOG.md\",\n    \"build\": \"yarn lint && yarn jest && yarn lint && gulp\",\n    \"dev\": \"yarn test && gulp --dev\",\n    \"lint\": \"eslint src\",\n    \"test\": \"rimraf lib && tsc && jest --watch\",\n    \"prettier\": \"prettier src src --write\",\n    \"docs:dev\": \"vuepress dev docs\",\n    \"docs:build\": \"vuepress build docs\",\n    \"pub\": \"node publish/index.js\"\n  }\n}\n","/**\n * @date 2020-12-04\n * @param { Array }\n * @author saltire\n * @description 多维数组扁平化\n * @return { Array }\n */\nfunction flatten<T>(arr: Array<T>): Array<T> {\n  while (arr.some((item) => Array.isArray(item))) {\n    arr = [].concat(...((arr as unknown) as ConcatArray<never>[]));\n  }\n\n  return arr;\n}\n\n/**\n * @author jxye\n * @date 2020/3/18\n * @Description: 防止函数被频繁触发，设置一个间隔时间，如果间隔时间内用户又一次触发，认为触发无效，并且重新设置间隔时间，这就是常说的防抖\n * @example: debounce(function(){console.log(this);}, 300)\n */\nfunction debounce(\n  func: () => any,\n  delay: number,\n  ...args: []\n): (...args: any[]) => void {\n  let timeout: NodeJS.Timeout;\n  return function () {\n    clearTimeout(timeout);\n\n    timeout = setTimeout(() => {\n      // @ts-ignore\n      func.apply(this, args);\n    }, delay);\n  };\n}\n\n/**\n * @date 2020-07-09\n * @author saltire\n * @description 将一个字符串复制到剪贴板\n * @param (string, 要复制的字符串)\n */\nfunction copyToClipboard(str: string): void {\n  const el = document.createElement(\"textarea\");\n  const getSelection = document.getSelection() as Selection;\n  el.value = str;\n  el.setAttribute(\"readonly\", \"\");\n  el.style.position = \"absolute\";\n  el.style.left = \"-9999px\";\n  document.body.appendChild(el);\n  const selected =\n    getSelection.rangeCount > 0 ? getSelection.getRangeAt(0) : false;\n  el.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(el);\n  if (selected) {\n    getSelection.removeAllRanges();\n    getSelection.addRange(selected);\n  }\n}\n\n/**\n * @date 2020-08-17\n * @author saltire\n * @description 根据网络上的url地址下载文件\n * @param (string, 文件地址);(string, 下载后的文件名)\n */\nfunction downoladFile(url: string, name: string): void {\n  const xhr = new XMLHttpRequest();\n  let path = \"\";\n  xhr.open(\"get\", url);\n  xhr.responseType = \"blob\";\n  xhr.onload = function () {\n    path = URL.createObjectURL(xhr.response);\n    const a = document.createElement(\"a\");\n    a.setAttribute(\"download\", name);\n    a.setAttribute(\"href\", path);\n    a.click();\n    URL.revokeObjectURL(path);\n  };\n  xhr.send();\n}\n\n/**\n * @date 2020-11-17\n * @author saltire\n * @description 控制函数只执行一次\n * @param 希望被控制的函数\n */\nfunction once(fn: (...args: any[]) => void): AnyObject {\n  let flag = false;\n\n  return function (...args: []) {\n    if (!flag) {\n      flag = true;\n      return fn(...args);\n    }\n\n    return;\n  };\n}\n\nconst common: commonInterface = {\n  flatten,\n  debounce,\n  copyToClipboard,\n  downoladFile,\n  once,\n};\n\ninterface commonInterface {\n  /**\n   * 多维数组扁平化\n   * @param array - 希望被扁平化处理的多维数组\n   * @example flatten([1,2,[3,4]]) === [1,2,3,4]\n   * @example flatten([1,2,[3,4],[5,6,[7,8,9]]]) === [1,2,3,4,5,6,7,8,9]\n   */\n  flatten: <T>(arr: Array<T>) => Array<T>;\n  /**\n   * 防止函数被频繁触发，设置一个间隔时间，如果间隔时间内用户又一次触发，认为触发无效，并且重新设置间隔时间，这就是常说的防抖\n   * @param func - 指定的函数\n   * @param delay - 延迟时间（毫秒）\n   * @example debounce(function(){console.log(this);}, 300)\n   */\n  debounce: (func: any, delay: number) => (...args: any[]) => void;\n  /**\n   * 将一个字符串复制到剪贴板\n   * @param  str - 要复制的字符串\n   * @example copyToClipboard('so helpful!')\n   */\n  copyToClipboard: (str: string) => void;\n  /**\n   * 根据网络上的url地址下载文件\n   * @param url - 文件的地址\n   * @param name - 指定下载后的文件名称\n   * @example downoladFile('http:example.com/file.pdf', '百科全书.pdf')\n   */\n  downoladFile: (url: string, name: string) => void;\n  /**\n   * 控制函数只执行一次\n   * @param fn - 希望被控制的函数\n   * @example once(function(){console.log('foo')})()\n   */\n  once: (fn: (...args: any[]) => void) => AnyObject;\n}\n\nexport { common, commonInterface };\n","/**\n * @date 2020-06-19\n * @author saltire\n * @description 给站点设置cookie\n * @param (cname,string,键名) （cvalue，string，键值）（exdays, number, 失效时间，以天为单位）\n * @return undefined\n */\nfunction setCookie(\n  site: string,\n  cname: string,\n  cvalue: string,\n  exdays: number\n): void {\n  const d = new Date();\n  d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);\n  const expires = \"expires=\" + d.toUTCString();\n  document.cookie =\n    cname + \"=\" + cvalue + \"; \" + expires + \"; path=/; domain=.\" + site;\n}\n\n/* 获取cookie */\nfunction getCookie(cname: string): string {\n  const name = cname + \"=\";\n  const ca = document.cookie.split(\";\");\n  for (let i = 0; i < ca.length; i++) {\n    let c = ca[i];\n    while (c.charAt(0) == \" \") c = c.substring(1);\n    if (c.indexOf(name) != -1) return c.substring(name.length, c.length);\n  }\n\n  return \"\";\n}\n\n/* 清除某个cookie */\nfunction clearCookie(site: string, name: string): void {\n  setCookie(site, name, \"\", -1);\n}\n\n/**\n * @date 2020-07-09\n * @author saltire\n * @description 解析 HTTP Cookie 字符串并返回所有 cookie 的 name-value 对的对象\n * @return (object)\n */\nfunction parseCookie(): AnyObject {\n  return document.cookie\n    .split(\";\")\n    .map((v) => v.split(\"=\"))\n    .reduce((acc: any, v) => {\n      acc[decodeURIComponent(v[0].trim())] = decodeURIComponent(v[1].trim());\n      return acc;\n    }, {});\n}\nconst cookie: cookieInterface = {\n  setCookie,\n  getCookie,\n  clearCookie,\n  parseCookie,\n};\n\ninterface cookieInterface {\n  /**\n   * 给站点设置 cookie\n   * @param site - 站点的域名（无需 www）\n   * @param cname - cookie 的键\n   * @param cvalue - cookie 的值\n   * @param exdays - 失效时间，以天为单位\n   * @example setCookie('example.com', 'foo', 'bar', 3)\n   */\n  setCookie: (\n    site: string,\n    cname: string,\n    cvalue: string,\n    exdays: number\n  ) => void;\n  /**\n   * 获取 cookie\n   * @param cname - cookie 的键\n   * @example getCookie('foo') === \"bar\"\n   */\n  getCookie: (cname: string) => string;\n  /**\n   * 清除某个 cookie\n   * @param site - 站点的域名\n   * @param name - cookie 的键\n   * @example clearCookie('example.com', 'foo')\n   */\n  clearCookie: (site: string, name: string) => void;\n  /**\n   * 解析 HTTP Cookie 字符串并返回所有 cookie 的 name-value 对的对象\n   * @example parseCookie() === {foo: \"1\", bar: \"2\"}\n   */\n  parseCookie: () => AnyObject;\n}\n\nexport { cookie, cookieInterface };\n","/**\n * @date 2020-06-19\n * @author saltire\n * @description 判断指定日期是否在指定的开始日期和结束日期之间\n * @param (date, 指定日期) (start, 开始时间) （end， 结束时间）\n * @return boolean true false\n * @example isDuringDate('2019-02-01', 2019-01-02', '2020-08-01') => true\n */\nfunction between(\n  d: potentialDate,\n  s: potentialDate,\n  e: potentialDate\n): boolean {\n  const date = new Date(d);\n  const start = new Date(s);\n  const end = new Date(e);\n  const t = date.getTime();\n\n  return start.getTime() <= t && t <= end.getTime();\n}\n\n// 日期格式化工具函数\nfunction renderDate(d: potentialDate, f?: string): string {\n  const date = new Date(d);\n  let fmt = f || \"yyyy-MM-dd\";\n  const o: AnyObject = {\n    \"M+\": date.getMonth() + 1, //月份\n    \"d+\": date.getDate(), //日\n    \"h+\": date.getHours() % 12 == 0 ? 12 : date.getHours() % 12, //小时\n    \"H+\": date.getHours(), //小时\n    \"m+\": date.getMinutes(), //分\n    \"s+\": date.getSeconds(), //秒\n    \"q+\": Math.floor((date.getMonth() + 3) / 3), //季度\n    S: date.getMilliseconds(), //毫秒\n  };\n  const week: AnyObject = {\n    \"0\": \"/u65e5\",\n    \"1\": \"/u4e00\",\n    \"2\": \"/u4e8c\",\n    \"3\": \"/u4e09\",\n    \"4\": \"/u56db\",\n    \"5\": \"/u4e94\",\n    \"6\": \"/u516d\",\n  };\n  if (/(y+)/.test(fmt)) {\n    fmt = fmt.replace(\n      RegExp.$1,\n      (date.getFullYear() + \"\").substr(4 - RegExp.$1.length)\n    );\n  }\n  if (/(E+)/.test(fmt)) {\n    fmt = fmt.replace(\n      RegExp.$1,\n      (RegExp.$1.length > 1\n        ? RegExp.$1.length > 2\n          ? \"/u661f/u671f\"\n          : \"/u5468\"\n        : \"\") + week[date.getDay() + \"\"]\n    );\n  }\n  for (const k in o) {\n    if (new RegExp(\"(\" + k + \")\").test(fmt)) {\n      fmt = fmt.replace(\n        RegExp.$1,\n        RegExp.$1.length == 1 ? o[k] : (\"00\" + o[k]).substr((\"\" + o[k]).length)\n      );\n    }\n  }\n  return fmt;\n}\n\n/* 判断两个日期是否相等 */\nfunction isEqual(d1: potentialDate, d2: potentialDate): boolean {\n  const date1 = new Date(d1);\n  const date2 = new Date(d2);\n  if (date1 && date2) {\n    return date1.getTime() === date2.getTime();\n  }\n  return !(date1 || date2);\n}\n\n/* 判断是否是闰年 */\nfunction isLeapYear(d: potentialDate): boolean {\n  const date = new Date(d);\n  const year = date.getFullYear();\n  return !!((year & 3) == 0 && (year % 100 || (year % 400 == 0 && year)));\n}\n\n/* 返回指定年月的第一天是星期几，返回值是1-7的数字 */\nfunction getFirstDayOfMonth(d: potentialDate): number {\n  const date = new Date(d);\n  const day = (date.getDay() - (date.getDate() - 1)) % 7;\n  return day <= 0 ? day + 7 : day\n}\n\n/* 返回指定月份的最后一天是星期几，返回值是1-7的数字 */\nfunction getLastDayOfMonth(d: potentialDate): number {\n  const date = new Date(d);\n  const day = new Date(getLastDateOfMonth(date)).getDay()\n  return day === 0 ? 7 : day\n}\n\n/* 返回指定年月第一天的日期 */\nfunction getFirstDateOfMonth(d: potentialDate): string {\n  const date = new Date(d);\n  return renderDate(new Date(date.getFullYear(), date.getMonth(), 1));\n}\n\n/* 返回指定年月最后一天的日期 */\nfunction getLastDateOfMonth(d: potentialDate): string {\n  const date = new Date(d);\n  return renderDate(\n    new Date(date.getFullYear(), date.getMonth(), getDaysInMonth(date))\n  );\n}\n\n/* 获取指定月份的天数 */\nconst daysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction getDaysInMonth(d: potentialDate): number {\n  const date = new Date(d);\n  const m = date.getMonth();\n\n  return m == 1 && isLeapYear(date) ? 29 : daysInMonth[m];\n}\n\n/* 给指定日期增加指定天数 */\nfunction addDays(d: potentialDate, days: number): Date {\n  const date = new Date(d);\n  const t_s = date.getTime(); //转化为时间戳毫秒数\n\n  date.setTime(t_s + 1000 * 60 * 60 * 24 * parseInt(String(days)));\n\n  return date;\n}\n\n/* 给指定日期增加指定小时 */\nfunction addHours(d: potentialDate, hours: number): Date {\n  const date = new Date(d);\n  const t_s = date.getTime(); //转化为时间戳毫秒数\n\n  date.setTime(t_s + 1000 * 60 * 60 * parseInt(String(hours)));\n\n  return date;\n}\n\n/* 将时间转为时间戳，按当天最初一刻 */\nfunction timeStartChange(t: potentialDate): number {\n  const d = new Date(t);\n  const datetime =\n    d.getFullYear() +\n    \"-\" +\n    (d.getMonth() + 1) +\n    \"-\" +\n    d.getDate() +\n    \"  00:00:00\";\n  const aa = new Date(datetime);\n  const c = aa.getTime();\n  return c;\n}\n\n/* 将时间转为时间戳，按当天最后一刻 */\nfunction timeEndChange(t: potentialDate): number {\n  const d = new Date(t);\n  const datetime =\n    d.getFullYear() +\n    \"-\" +\n    (d.getMonth() + 1) +\n    \"-\" +\n    d.getDate() +\n    \"  23:59:59\";\n  const aa = new Date(datetime);\n  const c = aa.getTime();\n  return c;\n}\n\ninterface dateObject {\n  day: number;\n  hour: number;\n  min: number;\n  ms: number;\n}\n\n// 获取时间差，提供两个时间戳，返回一个对象，为负数表示当前 time1 比 time2 小\nfunction timeDifference(time1: number, time2: number): dateObject {\n  const s1 = time1;\n  const s2 = time2;\n  const total = parseInt(String((s2 - s1) / 1000));\n  const day = parseInt(String(total / (24 * 60 * 60))); //计算整数天数\n  const afterDay = total - day * 24 * 60 * 60; //取得算出天数后剩余的秒数\n  const hour = parseInt(String(afterDay / (60 * 60))); //计算整数小时数\n  const afterHour = total - day * 24 * 60 * 60 - hour * 60 * 60; //取得算出小时数后剩余的秒数\n  const min = parseInt(String(afterHour / 60)); //计算整数分\n  const afterMin = total - day * 24 * 60 * 60 - hour * 60 * 60 - min * 60; //取得算出分后剩余的秒数\n\n  return {\n    day,\n    hour,\n    min,\n    ms: afterMin,\n  };\n}\n\nconst date: dateInterface = {\n  between,\n  renderDate,\n  isEqual,\n  isLeapYear,\n  getFirstDayOfMonth,\n  getFirstDateOfMonth,\n  getLastDateOfMonth,\n  getLastDayOfMonth,\n  getDaysInMonth,\n  addDays,\n  addHours,\n  timeStartChange,\n  timeEndChange,\n  timeDifference,\n};\n\ninterface dateInterface {\n  /**\n   * 判断指定日期是否在指定的开始日期和结束日期之间\n   * @param date - 指定日期\n   * @param start - 开始日期\n   * @param end - 结束日期\n   */\n  between: (\n    date: potentialDate,\n    start: potentialDate,\n    end: potentialDate\n  ) => boolean;\n\n  /**\n   * 日期格式化工具函数\n   * @param date - 需要格式化的日期\n   * @param format - 格式化规则\n   * @example renderDate(1614564487401, 'yyyy-MM-dd HH:mm')\n   */\n  renderDate: (date: potentialDate, format?: string) => string;\n\n  /**\n   * 判断两个日期是否相等\n   * @param date1 - 日期 1\n   * @param date2 - 日期 2\n   */\n  isEqual: (date1: potentialDate, date2: potentialDate) => boolean;\n\n  /**\n   * 判断是否是闰年\n   * @example date - 需要判断的日期\n   */\n  isLeapYear: (date: potentialDate) => boolean;\n\n  /**\n   * 返回指定年月的第一天是星期几，返回值是1-7的数字\n   * @param date - 指定的日期\n   */\n  getFirstDayOfMonth: (date: potentialDate) => number;\n\n  /**\n   * 返回指定月份的最后一天是星期几，返回值是1-7的数字\n   * @param date - 指定的日期\n   */\n  getLastDayOfMonth: (date: potentialDate) => number;\n\n  /**\n   * 返回指定年月第一天的日期\n   * @param date - 指定的年月\n   */\n  getFirstDateOfMonth: (date: potentialDate) => string;\n\n  /**\n   * 返回指定年月最后一天的日期\n   * @param date - 指定的年月\n   */\n  getLastDateOfMonth: (date: potentialDate) => string;\n\n  /**\n   * 获取指定月份的天数\n   * @param date - 指定的年月\n   */\n  getDaysInMonth: (date: potentialDate) => number;\n\n  /**\n   * 给指定日期增加指定天数\n   * @param date - 指定的日期\n   * @param days - 要增加的天数\n   */\n  addDays: (date: potentialDate, days: number) => Date;\n\n  /**\n   * 给指定日期增加指定小时\n   * @param date - 指定的日期\n   * @param hours - 要增加的小时\n   */\n  addHours: (date: potentialDate, hours: number) => Date;\n\n  /**\n   * 将时间转为时间戳，按当天最初一刻\n   * @param date - 指定的日期\n   */\n  timeStartChange: (date: potentialDate) => number;\n\n  /**\n   * 将时间转为时间戳，按当天最后一刻\n   * @param date - 指定的日期\n   */\n  timeEndChange: (date: potentialDate) => number;\n\n  /**\n   * 获取时间差，提供两个时间戳，返回一个对象，为负数表示当前 time1 比 time2 小\n   * @param time1 - 第一个时间的时间戳\n   * @param time2 - 第二个时间的时间戳\n   */\n  timeDifference: (time1: number, time2: number) => dateObject;\n}\n\nexport { dateInterface, date };\n","/**\n * 平滑滚动到页面顶部。\n * 使用 document.documentElement.scrollTop 或 document.body.scrollTop 获取到顶部距离。\n * 从顶部滚动一小部分距离。使用window.requestAnimationFrame() 来实现滚动动画。\n */\nfunction scrollToTop(): undefined {\n  try {\n    const c = document.documentElement.scrollTop || document.body.scrollTop;\n\n    if (c > 0) {\n      window.requestAnimationFrame(scrollToTop);\n      window.scrollTo(0, c - c / 8);\n    }\n  } catch {\n    return;\n  }\n}\n\n/**\n * @date 2020-07-09\n * @author saltire\n * @description 如果指定的元素在可视窗口中可见，则返回 true ，否则返回 false\n * @param （指定元素，el）（省略第二个参数来判断元素是否完全可见，或者指定 true 来判断它是否部分可见，bolean）\n * @return boolean\n */\nfunction elementIsVisibleInViewport(\n  el: Element,\n  partiallyVisible = false\n): boolean {\n  try {\n    const { top, left, bottom, right } = el.getBoundingClientRect();\n    const { innerHeight, innerWidth } = window;\n    return partiallyVisible\n      ? ((top > 0 && top < innerHeight) ||\n          (bottom > 0 && bottom < innerHeight)) &&\n          ((left > 0 && left < innerWidth) || (right > 0 && right < innerWidth))\n      : top >= 0 && left >= 0 && bottom <= innerHeight && right <= innerWidth;\n  } catch {\n    return false;\n  }\n}\n\n// 判断是否是火狐内核\nfunction isgecko(): boolean {\n  let u: string;\n\n  try {\n    u = window.navigator && window.navigator.userAgent;\n  } catch {\n    u = \"\";\n  }\n\n  return u.indexOf(\"Gecko\") > -1 && u.indexOf(\"KHTML\") == -1;\n}\n\n// 判断是否是 QQ 浏览器\nfunction isqq(): boolean {\n  let u: string;\n\n  try {\n    u = window.navigator && window.navigator.userAgent;\n  } catch {\n    u = \"\";\n  }\n\n  return u.indexOf(\"mqqbrowser\") > -1;\n}\n\n// 判断是否是 QQ 浏览器\nfunction isweixin(): boolean {\n  let u: string;\n\n  try {\n    u = window.navigator && window.navigator.userAgent;\n  } catch {\n    u = \"\";\n  }\n\n  return u.indexOf(\"MicroMessenger\") > -1;\n}\n\n// 判断是pc端还是移动端\nfunction ispc(): boolean {\n  let userAgentInfo: string | undefined;\n  try {\n    userAgentInfo = window.navigator && window.navigator.userAgent;\n  } catch {\n    userAgentInfo = \"\";\n  }\n  const Agents = [\n    \"Android\",\n    \"iPhone\",\n    \"SymbianOS\",\n    \"Windows Phone\",\n    \"iPad\",\n    \"iPod\",\n  ];\n  let flag = true;\n  for (let v = 0; v < Agents.length; v++) {\n    if (userAgentInfo.indexOf(Agents[v]) > 0) {\n      flag = false;\n      break;\n    }\n  }\n  return flag;\n}\n\ninterface deviceInterface {\n  /**\n   * 平滑滚动到页面顶部\n   */\n  scrollToTop: () => void;\n\n  /**\n   * 如果指定的元素在可视窗口中可见，则返回 true ，否则返回 false\n   * @param el - 需要判断的元素\n   * @param partiallyVisible - 是否部分可见，指定为 true 则表示只有元素完全可见才返回 true\n   */\n  elementIsVisibleInViewport: (\n    el: Element,\n    partiallyVisible: boolean\n  ) => boolean;\n\n  /**\n   * 判断是否处于浏览器环境中\n   */\n  inBrowser: () => boolean;\n\n  /**\n   * 判断是否是 IE 浏览器\n   */\n  isIE: () => boolean;\n\n  /**\n   * 判断是否是 IE9 浏览器\n   */\n  isIE9: () => boolean;\n\n  /**\n   * 判断是否是 Edge 浏览器\n   */\n  isEdge: () => boolean;\n\n  /**\n   * 判断是否是安卓环境\n   */\n  isAndroid: () => boolean;\n\n  /**\n   * 判断是否是 IOS 环境\n   */\n  isIOS: () => boolean;\n\n  /**\n   * 判断是否是谷歌浏览器\n   */\n  isChrome: () => boolean;\n\n  /**\n   * 判断是否是火狐浏览器\n   */\n  isgecko: () => boolean;\n\n  /**\n   * 判断是否是 QQ 浏览器\n   */\n  isqq: () => boolean;\n\n  /**\n   * 判断是 pc 端还是移动端\n   */\n  ispc: () => boolean;\n\n  /**\n   * 判断是否是微信环境\n   */\n  isweixin: () => boolean;\n}\n\nconst device: deviceInterface = {\n  scrollToTop,\n  elementIsVisibleInViewport,\n  inBrowser,\n  isIE,\n  isIE9,\n  isEdge,\n  isAndroid,\n  isIOS,\n  isChrome,\n  isgecko,\n  isqq,\n  ispc,\n  isweixin,\n};\n\n// Browser environment sniffing\nfunction inBrowser(): boolean {\n  return typeof window !== \"undefined\";\n}\n\n// 返回浏览器的 user-agent\nfunction getUA(): string {\n  if (inBrowser()) {\n    return window.navigator.userAgent.toLowerCase();\n  }\n\n  return \"\";\n}\n\n/**\n * 判断是否是 IE 浏览器\n */\nfunction isIE(): boolean {\n  if (getUA()) {\n    return /msie|trident/.test(getUA());\n  }\n  return false;\n}\n\n/**\n * 判断是否是 IE9 浏览器\n */\nfunction isIE9(): boolean {\n  if (getUA()) {\n    return getUA().indexOf(\"msie 9.0\") > 0;\n  }\n  return false;\n}\n\n/**\n * 判断是否是 Edge 浏览器\n */\nfunction isEdge(): boolean {\n  if (getUA()) {\n    return getUA().indexOf(\"edge/\") > 0;\n  }\n  return false;\n}\n\n/**\n * 判断是否是安卓环境\n */\nfunction isAndroid(): boolean {\n  if (getUA()) {\n    return getUA().indexOf(\"android\") > 0;\n  }\n  return false;\n}\n\n/**\n * 判断是否是 IOS 环境\n */\nfunction isIOS(): boolean {\n  if (getUA()) {\n    return /iphone|ipad|ipod|ios/.test(getUA());\n  }\n  return false;\n}\n\n/**\n * 判断是否是 IOS 环境\n */\nfunction isChrome(): boolean {\n  if (getUA()) {\n    return /chrome\\/\\d+/.test(getUA()) && !isEdge;\n  }\n  return false;\n}\n\nexport { device, deviceInterface };\n","/**\n * @author jxye\n * @date 2020/3/11\n * @Description: 判断元素是否含有某个class\n * @example: hasClass(document.getElementById('content-toc'), 'content-toc') => true或false\n */\nfunction hasClass(element: Element, className: string): boolean {\n  if (!element || !className) {\n    throw new Error(\"arguments error\");\n  }\n  if (element.classList.contains(className)) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @author jxye\n * @date 2020/3/11\n * @Description: 原生js操作元素class的方法，给元素添加class，支持不定长参数\n */\nfunction addClass(element: Element, ...argus: Array<string>): void {\n  if (!element || arguments.length <= 1) {\n    throw new Error(\"arguments error\");\n  }\n\n  for (let i = 0; i < argus.length; i++) {\n    if (!element.classList.contains(argus[i])) {\n      element.classList.add(argus[i]);\n    }\n  }\n}\n\n/**\n * @author jxye\n * @date 2020/3/11\n * @Description: 原生js操作元素class的方法，删除元素的class，支持不定长参数\n */\nfunction removeClass(element: Element, ...argus: Array<string>): void {\n  if (!element || arguments.length <= 1) {\n    throw new Error(\"arguments error\");\n  }\n\n  for (let i = 0; i < argus.length; i++) {\n    if (element.classList.contains(argus[i])) {\n      element.classList.remove(argus[i]);\n    }\n  }\n}\n\n/**\n * 返回整个 html文档的 scrollTop 值\n * @returns number\n */\nfunction getScrollTop(): number {\n  return Math.max(document.body.scrollTop, document.documentElement.scrollTop);\n}\n\n/**\n * 返回整个 html文档的 scrollLeft 值\n * @returns number\n */\nfunction getScrollLeft(): number {\n  return Math.max(\n    document.body.scrollLeft,\n    document.documentElement.scrollLeft\n  );\n}\n\n/**\n * 获取元素距页面高度\n * @param el - 指定的元素\n * @returns  number - 元素距离页面的高度\n */\nfunction getElementTop(el: HTMLElement): number {\n  let actualTop = el.offsetTop;\n  let current: HTMLElement | null = el.offsetParent as HTMLElement;\n\n  while (current !== null) {\n    actualTop += current.offsetTop;\n    current = current.offsetParent as HTMLElement;\n  }\n\n  return actualTop;\n}\n\n/**\n * 获取整个网页的实际高度与宽度\n * @returns 返回一个具有 width 和 height 属性的对象或者返回 null\n */\nfunction getPagearea(): ObjectWidthHeight | null {\n  try {\n    return {\n      width: Math.max(\n        document.documentElement.scrollWidth,\n        document.documentElement.clientWidth\n      ),\n      height: Math.max(\n        document.documentElement.scrollHeight,\n        document.documentElement.clientHeight\n      ),\n    };\n  } catch (error) {\n    return null;\n  }\n}\n\ninterface ObjectWidthHeight {\n  width: number;\n  height: number;\n}\n\ninterface domInterface {\n  /**\n   * 判断元素是否含有某个class\n   * @param element - 指定的元素\n   * @param className - class 名称\n   * @example hasClass(document.getElementById('content-toc'), 'content-toc') => true 或 false\n   */\n  hasClass: (element: Element, className: string) => boolean;\n\n  /**\n   * 原生js操作元素class的方法，给元素添加class，支持不定长参数\n   * @param element - 指定的元素\n   */\n  addClass(element: Element): void;\n\n  /**\n   * 原生js操作元素class的方法，删除元素的class，支持不定长参数\n   * @param element - 指定的元素\n   */\n  removeClass(element: Element): void;\n\n  /**\n   * 返回整个 html文档的 scrollLeft 值\n   * @returns number\n   */\n  getScrollLeft(): number;\n\n  /**\n   * 返回整个 html文档的 scrollTop 值\n   * @returns number\n   */\n  getScrollTop(): number;\n\n  /**\n   * 获取元素距页面高度\n   * @param el - 指定的元素\n   * @returns  number - 元素距离页面的高度\n   */\n  getElementTop(el: HTMLElement): number;\n\n  /**\n   * 获取整个网页的实际高度与宽度\n   * @returns 返回一个具有 width 和 height 属性的对象或者返回 null\n   */\n  getPagearea(): ObjectWidthHeight | null;\n}\n\nconst dom: domInterface = {\n  hasClass,\n  addClass,\n  removeClass,\n  getScrollLeft,\n  getScrollTop,\n  getElementTop,\n  getPagearea,\n};\n\nexport { dom, domInterface };\n","import { common, commonInterface } from \"./common\";\nimport { cookie, cookieInterface } from \"./cookie\";\nimport { date, dateInterface } from \"./date\";\nimport { device, deviceInterface } from \"./device\";\nimport { dom, domInterface } from \"./dom\";\nimport { check, checkInterface } from \"./regexp\";\nimport { str, stringInterface } from \"./string\";\nimport { url, urlInterface } from \"./url\";\nimport { name, version } from \"../package.json\";\n\ninterface saltireUtilInterface\n  extends commonInterface,\n    cookieInterface,\n    dateInterface,\n    deviceInterface,\n    domInterface,\n    checkInterface,\n    stringInterface,\n    urlInterface {\n  version: string;\n  name: string;\n}\n\nconst saltireUtil: saltireUtilInterface = Object.assign(\n  { name, version },\n  cookie,\n  common,\n  date,\n  device,\n  dom,\n  check,\n  str,\n  url\n);\n\nexport default saltireUtil;\n","interface regObject {\n  [propName: string]: RegExp;\n}\n\nconst reg: regObject = {\n  // 网址(url,支持端口和\"?+参数\"和\"#+参数)\n  url: /^(((ht|f)tps?):\\/\\/)?[\\w-]+(\\.[\\w-]+)+([\\w.,@?^=%&:/~+#-]*[\\w@?^=%&/~+#-])?$/,\n\n  // 视频(video)链接地址（视频格式可按需增删）\n  video_url: /^https?:\\/\\/(.+\\/)+.+(\\.(swf|avi|flv|mpg|rm|mov|wav|asf|3gp|mkv|rmvb|mp4))$/i,\n\n  // 图片(image)链接地址（图片格式可按需增删）\n  img_url: /^https?:\\/\\/(.+\\/)+.+(\\.(gif|png|jpg|jpeg|webp|svg|psd|bmp|tif))$/i,\n\n  // 24小时制时间（HH:mm:ss）\n  time_24: /^(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d$/,\n\n  // 12小时制时间（hh:mm:ss）\n  time_12: /^(?:1[0-2]|0?[1-9]):[0-5]\\d:[0-5]\\d$/,\n\n  // base64格式\n  base64: /^\\s*data:(?:[a-z]+\\/[a-z0-9-+.]+(?:;[a-z-]+=[a-z0-9-]+)?)?(?:;base64)?,([a-z0-9!$&',()*+;=\\-._~:@/?%\\s]*?)\\s*$/i,\n\n  // 数字/货币金额（支持负数、千分位分隔符）\n  money: /^-?\\d+(,\\d{3})*(\\.\\d{1,2})?$/,\n\n  // 银行卡号（10到30位, 覆盖对公/私账户, 参考微信支付）\n  bank_card: /^[1-9]\\d{9,29}$/,\n\n  // 中文姓名\n  name_chinese: /^(?:[\\u4e00-\\u9fa5·]{2,16})$/,\n\n  // 车牌号(新能源+非新能源)\n  license_plate: /^(?:[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领 A-Z]{1}[A-HJ-NP-Z]{1}(?:(?:[0-9]{5}[DF])|(?:[DF](?:[A-HJ-NP-Z0-9])[0-9]{4})))$|(?:[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领 A-Z]{1}[A-Z]{1}[A-HJ-NP-Z0-9]{4}[A-HJ-NP-Z0-9 挂学警港澳]{1})$/,\n\n  // md5格式(32位)\n  md5: /^([a-f\\d]{32}|[A-F\\d]{32})$/,\n\n  // 手机号(mobile phone)中国(严谨), 根据工信部2019年最新公布的手机号段\n  phone_rigorous: /^(?:(?:\\+|00)86)?1(?:(?:3[\\d])|(?:4[5-7|9])|(?:5[0-3|5-9])|(?:6[5-7])|(?:7[0-8])|(?:8[\\d])|(?:9[1|8|9]))\\d{8}$/,\n\n  // 手机号(mobile phone)中国(宽松), 只要是13,14,15,16,17,18,19开头即可\n  phone_loose: /^(?:(?:\\+|00)86)?1[3-9]\\d{9}$/,\n\n  // 日期 支持2020-01-02和2020/01/02这两种形式\n  date: /^\\d{4}(-|\\/)(1[0-2]|0?\\d)\\1([0-2]\\d|\\d|30|31)$/,\n\n  // 邮箱\n  email: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n\n  // 座机(tel phone)电话(国内),如: 0341-86091234\n  tel: /^\\d{3}-\\d{8}$|^\\d{4}-\\d{7,8}$/,\n\n  // 身份证号(2代,18位数字),最后一位是校验位,可能为数字或字符X\n  id_card: /^[1-9]\\d{5}(?:18|19|20)\\d{2}(?:0[1-9]|10|11|12)(?:0[1-9]|[1-2]\\d|30|31)\\d{3}[\\dXx]$/,\n\n  // 护照（包含香港、澳门）\n  passports: /(^[EeKkGgDdSsPpHh]\\d{8}$)|(^(([Ee][a-fA-F])|([DdSsPp][Ee])|([Kk][Jj])|([Mm][Aa])|(1[45]))\\d{7}$)/,\n\n  // 用户名校验，4到16位（字母，数字，下划线，减号）\n  username: /^[a-zA-Z0-9_-]{4,16}$/,\n\n  // 中文/汉字\n  chinese: /^(?:[\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uFA0E\\uFA0F\\uFA11\\uFA13\\uFA14\\uFA1F\\uFA21\\uFA23\\uFA24\\uFA27-\\uFA29]|[\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0])+$/,\n\n  // 小数\n  decimal: /^\\d+\\.\\d+$/,\n\n  // qq号码格式\n  qq_number: /^[1-9][0-9]{4,10}$/,\n\n  // 密码强度校验，最少6位，包括至少1个大写字母，1个小写字母，1个数字，1个特殊字符\n  password: /^\\S*(?=\\S{6,})(?=\\S*\\d)(?=\\S*[A-Z])(?=\\S*[a-z])(?=\\S*[!@#$%^&*? ])\\S*$/,\n\n  // ipv4地址\n  ip_v4: /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,\n\n  // 十六进制颜色\n  color_16: /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/,\n\n  // 微信号\n  wx_username: /^[a-zA-Z][-_a-zA-Z0-9]{5,19}$/,\n\n  // 邮政编码（中国）\n  zip_code: /^(0[1-7]|1[0-356]|2[0-7]|3[0-6]|4[0-7]|5[1-7]|6[1-7]|7[0-5]|8[013-6])\\d{4}$/,\n};\n\n/**\n * @date 2020-06-19\n * @author saltire\n * @description 常用正则表达式的验证\n * @param （string，待验证的字符串）\n * @return （boolean，验证结果）\n * @example  check.isphone_loose('19121673570') => true\n */\nconst checkType = function (s: string, r: RegExp) {\n  const regNew = new RegExp(r);\n\n  return regNew.test(s);\n};\n\nconst check: checkInterface = {};\n\nObject.keys(reg).forEach(function (t) {\n  check[\"is\" + t] = function (params: string) {\n    return checkType(params, reg[t]);\n  };\n});\n\ninterface checkInterface {\n  [propName: string]: any;\n  /**\n   * 网址(url,支持端口和\"?+参数\"和\"#+参数)\n   * @param param 待判定数据类型\n   */\n  isurl?: (param: any) => boolean;\n  /**\n   * 视频(video)链接地址（视频格式可按需增删）\n   * @param param 待判定数据类型\n   */\n  isvideo_url?: (param: any) => boolean;\n  /**\n   * 图片(image)链接地址（图片格式可按需增删）\n   * @param param 待判定数据类型\n   */\n  isimg_url?: (param: any) => boolean;\n  /**\n   * 24小时制时间（HH:mm:ss）\n   * @param param 待判定数据类型\n   */\n  istime_24?: (param: any) => boolean;\n  /**\n   * 12小时制时间（hh:mm:ss）\n   * @param param 待判定数据类型\n   */\n  istime_12?: (param: any) => boolean;\n  /**\n   * base64格式\n   * @param param 待判定数据类型\n   */\n  isbase64?: (param: any) => boolean;\n  /**\n   * 数字/货币金额（支持负数、千分位分隔符）\n   * @param param 待判定数据类型\n   */\n  ismoney?: (param: any) => boolean;\n  /**\n   * 银行卡号（10到30位, 覆盖对公/私账户, 参考微信支付）\n   * @param param 待判定数据类型\n   */\n  isbank_card?: (param: any) => boolean;\n  /**\n   * 中文姓名\n   * @param param 待判定数据类型\n   */\n  isname_chinese?: (param: any) => boolean;\n  /**\n   * 车牌号(新能源+非新能源)\n   * @param param 待判定数据类型\n   */\n  islicense_plate?: (param: any) => boolean;\n  /**\n   * md5格式(32位)\n   * @param param 待判定数据类型\n   */\n  ismd5?: (param: any) => boolean;\n  /**\n   * 手机号(mobile phone)中国(严谨), 根据工信部2019年最新公布的手机号段\n   * @param param 待判定数据类型\n   */\n  isphone_rigorous?: (param: any) => boolean;\n  /**\n   * 手机号(mobile phone)中国(宽松), 只要是13,14,15,16,17,18,19开头即可\n   * @param param 待判定数据类型\n   */\n  isphone_loose?: (param: any) => boolean;\n  /**\n   * 日期 支持2020-01-02和2020/01/02这两种形式\n   * @param param 待判定数据类型\n   */\n  isdate?: (param: any) => boolean;\n  /**\n   * 邮箱\n   * @param param 待判定数据类型\n   */\n  isemail?: (param: any) => boolean;\n  /**\n   * 座机(tel phone)电话(国内),如: 0341-86091234\n   * @param param 待判定数据类型\n   */\n  istel?: (param: any) => boolean;\n  /**\n   * 身份证号(2代,18位数字),最后一位是校验位,可能为数字或字符X\n   * @param param 待判定数据类型\n   */\n  isid_card?: (param: any) => boolean;\n  /**\n   * 护照（包含香港、澳门）\n   * @param param 待判定数据类型\n   */\n  ispassports?: (param: any) => boolean;\n  /**\n   * 用户名校验，4到16位（字母，数字，下划线，减号）\n   * @param param 待判定数据类型\n   */\n  isusername?: (param: any) => boolean;\n  /**\n   * 中文/汉字\n   * @param param 待判定数据类型\n   */\n  ischinese?: (param: any) => boolean;\n  /**\n   * 小数\n   * @param param 待判定数据类型\n   */\n  isdecimal?: (param: any) => boolean;\n  /**\n   * qq号码格式\n   * @param param 待判定数据类型\n   */\n  isqq_number?: (param: any) => boolean;\n  /**\n   * 密码强度校验，最少6位，包括至少1个大写字母，1个小写字母，1个数字，1个特殊字符\n   * @param param 待判定数据类型\n   */\n  ispassword?: (param: any) => boolean;\n  /**\n   * ipv4地址\n   * @param param 待判定数据类型\n   */\n  isip_v4?: (param: any) => boolean;\n  /**\n   * 十六进制颜色\n   * @param param 待判定数据类型\n   */\n  iscolor_16?: (param: any) => boolean;\n  /**\n   * 微信号\n   * @param param 待判定数据类型\n   */\n  iswx_username?: (param: any) => boolean;\n  /**\n   * 邮政编码（中国）\n   * @param param 待判定数据类型\n   */\n  iszip_code?: (param: any) => boolean;\n}\n\nexport { check, checkInterface };\n","/**\n * @author jxye\n * @date 2020/3/11\n * @Description: 英文字符串依序转驼峰，处理过程中遇见非英文字母字符，全部当做空格处理，其余依序拼装\n * @example: _.camelCase('Foo Bar'); => 'fooBar'\n * @example: _.camelCase('--foo-bar--'); => 'fooBar'\n * @example:  _.camelCase('FOO BAR QI#ZH');  => 'fooBarQiZh'\n */\nfunction camelCase(string: string): string | AnyObject {\n  const stringArray = string.split(\"\"),\n    start = string.search(/([a-zA-Z])/) + 1,\n    regCase = /^[a-zA-Z]$/,\n    result = [];\n\n  let nextUpperCase = false,\n    isCase,\n    error;\n\n  if (!string) {\n    error = \"camelCase调用时参数不能为空\";\n  }\n\n  if (start - 1 >= 0) {\n    // 推入首个字母，首个字母必须小写\n    result.push(stringArray[start - 1].toLowerCase());\n\n    for (let i = start; i < stringArray.length; i++) {\n      const singleString = stringArray[i];\n      const thisUpperCase = nextUpperCase;\n      isCase = regCase.test(singleString);\n      nextUpperCase = false;\n\n      if (isCase) {\n        if (thisUpperCase === false) {\n          result.push(singleString.toLowerCase());\n        } else {\n          result.push(singleString.toUpperCase());\n        }\n      } else {\n        nextUpperCase = true;\n      }\n    }\n  }\n\n  if (error) {\n    return new Error(error);\n  } else if (result && result.length) {\n    return result.join(\"\");\n  }\n\n  return string;\n}\n\n/**\n * @author jxye\n * @date 2020/3/11\n * @Description: 判断某个字符串是否以某特殊字符结尾,尾部空格会被忽略\n * @example: endsWith(\"foobar\", \"bar\") // true   endsWith(\"foobar\", \"foo\") // false\n */\nfunction endsWith(str: string, match: string): boolean | AnyObject {\n  if (!str || !match) {\n    return new Error(\"endsWith函数调用时参数不能为空\");\n  }\n\n  if (str === match) {\n    return true;\n  }\n\n  const reg = new RegExp(match.replace(/\\s*$/g, \"\") + \"$\");\n\n  return reg.test(str.replace(/\\s*$/g, \"\"));\n}\n\n/**\n * @author jxye\n * @date 2020/3/11\n * @Description: 判断某个字符串是否以某特殊字符开头,头部空格会被忽略\n * @example: startsWith(\"foobar\", \"fo\") // true startsWith(\"foobar\", \"v\") // false\n */\nfunction startsWith(string: string, match: string): boolean | AnyObject {\n  if (!string || !match) {\n    return new Error(\"startsWith函数调用时参数不能为空\");\n  }\n\n  if (string === match) {\n    return true;\n  }\n\n  const reg = new RegExp(\"^\" + match.replace(/^\\s*/g, \"\"));\n\n  return reg.test(string.replace(/^\\s*/g, \"\"));\n}\n\n/* 生成随机字符串 */\nfunction randomString(): string {\n  return Math.random().toString(36).substr(2);\n}\n\n/**\n * @date 2020-06-19\n * @author saltire\n * @description 隐藏号码的中间一部分，常见的是隐藏中间四位\n * @param (str：号码)，(frontLen：前面的号码显示数量)，(endLen：后面的号码显示数量)\n * @return string\n * @example hiddenNumber('13901342187', 3, 4) => 139****2187\n */\nfunction hiddenNumber(str: string, frontLen: number, endLen: number): string {\n  const len = str.length - frontLen - endLen;\n  let xing = \"\";\n  for (let i = 0; i < len; i++) {\n    xing += \"*\";\n  }\n  return str.substring(0, frontLen) + xing + str.substring(str.length - endLen);\n}\n\n// 生成一个[min, max]之间的随机数\nfunction randomNumber(min: number, max: number): number {\n  return parseInt(String(Math.random() * (max - min + 1) + min), 10);\n}\n\ninterface stringInterface {\n  /**\n   * 英文字符串依序转驼峰，处理过程中遇见非英文字母字符，全部当做空格处理，其余依序拼装\n   * @param string - 待处理的字符串\n   * @example _.camelCase('Foo Bar'); => 'fooBar'\n   * @example _.camelCase('--foo-bar--'); => 'fooBar'\n   * @example  _.camelCase('FOO BAR QI#ZH');  => 'fooBarQiZh'\n   */\n  camelCase(string: string): string | AnyObject;\n  /**\n   * 判断某个字符串是否以某特殊字符结尾,尾部空格会被忽略\n   * @param str - 整个字符串\n   * @param match - 特殊字符\n   * @example endsWith(\"foobar\", \"bar\") // true   endsWith(\"foobar\", \"foo\") // false\n   */\n  endsWith(str: string, match: string): boolean | AnyObject;\n  /**\n   * 判断某个字符串是否以某特殊字符开头,头部空格会被忽略\n   * @param string - 整个字符串\n   * @param match - 特殊字符\n   * @example startsWith(\"foobar\", \"fo\") // true startsWith(\"foobar\", \"v\") // false\n   */\n  startsWith(string: string, match: string): boolean | AnyObject;\n  /**\n   * 生成随机字符串\n   */\n  randomString(): string;\n  /**\n   * 隐藏号码的中间一部分，常见的是隐藏中间四位\n   * @param str - 号码\n   * @param frontLen - 前面的号码显示数量\n   * @param endLen - 后面的号码显示数量\n   * @example hiddenNumber('13901342187', 3, 4) => 139****2187\n   */\n  hiddenNumber(str: string, frontLen: number, endLen: number): string;\n  /**\n   * 生成一个[min, max]之间的随机数\n   * @param min 最小数\n   * @param max 最大数\n   */\n  randomNumber(min: number, max: number): number;\n}\n\nconst str: stringInterface = {\n  camelCase,\n  endsWith,\n  startsWith,\n  randomString,\n  hiddenNumber,\n  randomNumber,\n};\n\nexport { str, stringInterface };\n","/* 获取url中的某个参数值 */\nfunction GetQueryString(name: string): string | null {\n  try {\n    const reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\");\n    const r = window.location.search.substr(1).match(reg);\n    if (r != null) return unescape(r[2]);\n    return null;\n  } catch {\n    return null;\n  }\n}\n\n/* 修改url中的某个参数的值，返回新地址 */\nfunction replaceQueryString(paramName: string, replaceWith: string): string {\n  const oUrl = window.location.href.toString();\n  const re = new RegExp(\"/(\" + paramName + \"=)([^&]*)/gi\");\n  const nUrl = oUrl.replace(re, paramName + \"=\" + replaceWith);\n  return nUrl;\n}\n\n/* 在URL中追加一个参数 */\nfunction addQueryString(paramName: string, replaceWith: string): string | null {\n  try {\n    let url = window.location.href;\n    if (url.indexOf(paramName) > -1) {\n      const re = new RegExp(\"/(\" + paramName + \"=)([^&]*)/gi\");\n      url = url.replace(re, paramName + \"=\" + replaceWith);\n    } else {\n      const paraStr = paramName + \"=\" + replaceWith;\n\n      const idx = url.indexOf(\"?\");\n      if (idx < 0) url += \"?\";\n      else if (idx >= 0 && idx != url.length - 1) url += \"&\";\n      url = url + paraStr;\n    }\n    return url;\n  } catch {\n    return null;\n  }\n}\n\n/**\n * @description 是否为绝对地址,如果给定的字符串是绝对URL，则返回 true ；否则返回 false。\n * @example isAbsoluteURL('https://google.com'); // true\n * @example isAbsoluteURL('ftp://www.myserver.net'); // true\n * @example isAbsoluteURL('/foo/bar'); // false\n */\nfunction isAbsoluteURL(str: string): boolean {\n  return /^[a-z][a-z0-9+.-]*:/.test(str);\n}\n\ninterface urlInterface {\n  /**\n   * 获取 url 中的某个参数值\n   * @param name 参数名\n   */\n  GetQueryString(name: string): string | null;\n  /**\n   * 修改 url 中的某个参数的值，返回新地址\n   * @param paramName 参数名\n   * @param replaceWith 新的参数值\n   */\n  replaceQueryString(paramName: string, replaceWith: string): string;\n  /**\n   * 在 URL 中追加一个参数\n   * @param paramName 追加的参数名\n   * @param replaceWith 追加的参数值\n   */\n  addQueryString(paramName: string, replaceWith: string): string | null;\n  /**\n   * 是否为绝对地址,如果给定的字符串是绝对 URL\n   * @param str 要判断的地址\n   * @example isAbsoluteURL('https://google.com'); // true\n   * @example isAbsoluteURL('ftp://www.myserver.net'); // true\n   * @example isAbsoluteURL('/foo/bar'); // false\n   */\n  isAbsoluteURL(str: string): boolean;\n}\n\nconst url: urlInterface = {\n  GetQueryString,\n  replaceQueryString,\n  addQueryString,\n  isAbsoluteURL,\n};\n\nexport { url, urlInterface };\n"]}
{"version":3,"sources":["node_modules/browser-pack/_prelude.js","package.json","src/common/index.ts","src/cookie/index.ts","src/date/index.ts","src/device/index.ts","src/dom/index.ts","src/index.ts","src/regexp/index.ts","src/string/index.ts","src/url/index.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","name","version","description","main","repository","author","license","devDependencies","@babel/core","@babel/preset-env","@commitlint/cli","@commitlint/config-conventional","babelify","browserify","conventional-changelog","conventional-changelog-cli","cz-conventional-changelog","del","gulp","gulp-concat","gulp-sourcemaps","gulp-typescript","gulp-uglify","husky","merge2","rimraf","tsify","typescript","vinyl-buffer","vinyl-source-stream","config","commitizen","path","hooks","commit-msg","scripts","log","build","dev","common","flatten","arr","some","item","Array","isArray","_ref","concat","apply","_toConsumableArray","debounce","func","delay","timeout","context","this","args","arguments","clearTimeout","setTimeout","copyToClipboard","str","el","document","createElement","getSelection","value","setAttribute","style","position","left","body","appendChild","selected","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange","downoladFile","url","xhr","XMLHttpRequest","open","responseType","onload","URL","createObjectURL","response","click","revokeObjectURL","send","once","fn","flag","setCookie","site","cname","cvalue","exdays","d","Date","setTime","getTime","expires","toUTCString","cookie","getCookie","ca","split","charAt","substring","indexOf","clearCookie","parseCookie","map","v","reduce","acc","decodeURIComponent","trim","renderDate","k","date","fmt","M+","getMonth","d+","getDate","h+","getHours","H+","m+","getMinutes","s+","getSeconds","q+","Math","floor","S","getMilliseconds","test","replace","RegExp","$1","getFullYear","substr","0","2","3","4","5","6","getDay","isLeapYear","year","getLastDateOfMonth","getDaysInMonth","daysInMonth","m","between","s","start","end","isEqual","d1","d2","date1","date2","getFirstDayOfMonth","day","getFirstDateOfMonth","getLastDayOfMonth","addDays","days","t_s","parseInt","String","addHours","hours","timeStartChange","datetime","timeEndChange","timeDifference","time1","time2","total","hour","min","ms","device","scrollToTop","documentElement","scrollTop","window","requestAnimationFrame","scrollTo","_a","elementIsVisibleInViewport","partiallyVisible","undefined","_el$getBoundingClient","getBoundingClientRect","top","bottom","right","_window","innerHeight","innerWidth","inBrowser","isIE","getUA","isIE9","isEdge","isAndroid","isIOS","isChrome","isgecko","navigator","userAgent","isqq","ispc","userAgentInfo","Agents","isweixin","toLowerCase","dom","hasClass","element","className","classList","contains","addClass","argus","from","prototype","slice","splice","add","removeClass","remove","getScrollLeft","max","scrollLeft","getScrollTop","getElementTop","actualTop","offsetTop","current","offsetParent","getPagearea","width","scrollWidth","clientWidth","height","scrollHeight","clientHeight","error","common_1","cookie_1","date_1","device_1","dom_1","regexp_1","string_1","url_1","package_json_1","saltireUtil","Object","assign","check","reg","video_url","img_url","time_24","time_12","base64","money","bank_card","name_chinese","license_plate","md5","phone_rigorous","phone_loose","email","tel","id_card","passports","username","chinese","decimal","qq_number","password","ip_v4","color_16","wx_username","zip_code","keys","forEach","params","camelCase","string","result","stringArray","nextUpperCase","search","regCase","regLowerCase","push","singleString","thisUpperCase","toUpperCase","join","endsWith","match","startsWith","randomString","random","toString","hiddenNumber","frontLen","endLen","len","xing","randomNumber","GetQueryString","location","unescape","replaceQueryString","paramName","replaceWith","oUrl","href","re","addQueryString","paraStr","idx","isAbsoluteURL"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","module.exports={\n  \"name\": \"saltire-util\",\n  \"version\": \"0.0.1\",\n  \"description\": \"A set of easy to use and suggestive JavaScript tool library\",\n  \"main\": \"index.js\",\n  \"repository\": \"git@github.com:saltires/saltire-util.git\",\n  \"author\": \"saltire<ye998102@163.com>\",\n  \"license\": \"MIT\",\n  \"devDependencies\": {\n    \"@babel/core\": \"^7.13.8\",\n    \"@babel/preset-env\": \"^7.13.9\",\n    \"@commitlint/cli\": \"^12.0.1\",\n    \"@commitlint/config-conventional\": \"^12.0.1\",\n    \"babelify\": \"^10.0.0\",\n    \"browserify\": \"^17.0.0\",\n    \"conventional-changelog\": \"^3.1.24\",\n    \"conventional-changelog-cli\": \"^2.1.1\",\n    \"cz-conventional-changelog\": \"^3.3.0\",\n    \"del\": \"^6.0.0\",\n    \"gulp\": \"^4.0.2\",\n    \"gulp-concat\": \"^2.6.1\",\n    \"gulp-sourcemaps\": \"^3.0.0\",\n    \"gulp-typescript\": \"^6.0.0-alpha.1\",\n    \"gulp-uglify\": \"^3.0.2\",\n    \"husky\": \"4.2.5\",\n    \"merge2\": \"^1.4.1\",\n    \"rimraf\": \"^3.0.2\",\n    \"tsify\": \"^5.0.2\",\n    \"typescript\": \"^4.2.3\",\n    \"vinyl-buffer\": \"^1.0.1\",\n    \"vinyl-source-stream\": \"^2.0.0\"\n  },\n  \"config\": {\n    \"commitizen\": {\n      \"path\": \"./node_modules/cz-conventional-changelog\"\n    }\n  },\n  \"husky\": {\n    \"hooks\": {\n      \"commit-msg\": \"commitlint -E HUSKY_GIT_PARAMS\"\n    }\n  },\n  \"scripts\": {\n    \"log\": \"rimraf CHANGELOG.md && conventional-changelog -p angular -i CHANGELOG.md -s && git add CHANGELOG.md\",\n    \"build\": \"gulp\",\n    \"dev\": \"gulp --dev\"\n  }\n}\n","/**\n * @date 2020-12-04\n * @param { Array }\n * @author saltire\n * @description 多维数组扁平化\n * @return { Array }\n */\nfunction flatten<T>(arr: Array<T>): Array<T> {\n    while (arr.some(item => Array.isArray(item))) {\n        arr = [].concat(...arr as unknown as ConcatArray<never>[])\n    }\n\n    return arr\n}\n\n/**\n * @author jxye\n * @date 2020/3/18\n * @Description: 防止函数被频繁触发，设置一个间隔时间，如果间隔时间内用户又一次触发，认为触发无效，并且重新设置间隔时间，这就是常说的防抖\n * @example: debounce(function(){console.log(this);}, 300)\n */\nfunction debounce(func: any, delay: number) {\n    let timeout: undefined | number;\n    return function () {\n        // @ts-ignore\n        const context = this;\n        const args = arguments;\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            func.call(context, args);\n        }, delay)\n    }\n}\n\n/**\n * @date 2020-07-09\n * @author saltire\n * @description 将一个字符串复制到剪贴板\n * @param (string, 要复制的字符串)\n */\nfunction copyToClipboard(str: string) {\n    const el = document.createElement('textarea');\n    const getSelection = document.getSelection() as Selection\n    el.value = str;\n    el.setAttribute('readonly', '');\n    el.style.position = 'absolute';\n    el.style.left = '-9999px';\n    document.body.appendChild(el);\n    const selected =\n        getSelection.rangeCount > 0 ? getSelection.getRangeAt(0) : false;\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n    if (selected) {\n        getSelection.removeAllRanges();\n        getSelection.addRange(selected);\n    }\n}\n\n/**\n * @date 2020-08-17\n * @author saltire\n * @description 根据网络上的url地址下载文件\n * @param (string, 文件地址);(string, 下载后的文件名)\n */\nfunction downoladFile(url: string, name: string) {\n    let xhr = new XMLHttpRequest();\n    let path = \"\";\n    xhr.open(\"get\", url);\n    xhr.responseType = \"blob\";\n    xhr.onload = function () {\n        path = URL.createObjectURL(xhr.response);\n        const a = document.createElement(\"a\");\n        a.setAttribute(\"download\", name);\n        a.setAttribute(\"href\", path);\n        a.click();\n        URL.revokeObjectURL(path);\n    };\n    xhr.send();\n}\n\n/**\n * @date 2020-11-17\n * @author saltire\n * @description 控制函数只执行一次\n * @param 希望被控制的函数\n */\nfunction once(fn: any) {\n    let flag = false\n\n    return function (...args: any) {\n        if (!flag) {\n            flag = true\n            return fn(...args)\n        }\n\n        return\n    }\n}\n\nconst common: commonInterface = {\n    flatten,\n    debounce,\n    copyToClipboard,\n    downoladFile,\n    once\n}\n\ninterface commonInterface {\n    /**\n     * 多维数组扁平化\n     * @param array - 希望被扁平化处理的多维数组\n     * @example flatten([1,2,[3,4]]) === [1,2,3,4]\n     * @example flatten([1,2,[3,4],[5,6,[7,8,9]]]) === [1,2,3,4,5,6,7,8,9]\n     */\n    flatten: <T>(arr: Array<T>) => Array<T>\n    /**\n     * 防止函数被频繁触发，设置一个间隔时间，如果间隔时间内用户又一次触发，认为触发无效，并且重新设置间隔时间，这就是常说的防抖\n     * @param func - 指定的函数\n     * @param delay - 延迟时间（毫秒）\n     * @example debounce(function(){console.log(this);}, 300)\n     */\n    debounce: (func: any, delay: number) => () => void\n    /**\n     * 将一个字符串复制到剪贴板\n     * @param  str - 要复制的字符串\n     * @example copyToClipboard('so helpful!')\n     */\n    copyToClipboard: (str: string) => void\n    /**\n     * 根据网络上的url地址下载文件\n     * @param url - 文件的地址\n     * @param name - 指定下载后的文件名称\n     * @example downoladFile('http:example.com/file.pdf', '百科全书.pdf')\n     */\n    downoladFile: (url: string, name: string) => void\n    /**\n     * 控制函数只执行一次\n     * @param fn - 希望被控制的函数\n     * @example once(function(){console.log('foo')})()\n     */\n    once: (fn: any) => any\n}\n\nexport {\n    common,\n    commonInterface\n}\n","/**\n  * @date 2020-06-19\n  * @author saltire\n  * @description 给站点设置cookie\n  * @param (cname,string,键名) （cvalue，string，键值）（exdays, number, 失效时间，以天为单位）\n  * @return undefined\n*/\nfunction setCookie(site: string, cname: string, cvalue: string, exdays: number): void {\n    let d = new Date();\n    d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\n    let expires = \"expires=\" + d.toUTCString();\n    document.cookie = cname + \"=\" + cvalue + \"; \" + expires + \"; path=/; domain=.\" + site;\n}\n\n/* 获取cookie */\nfunction getCookie(cname: string) {\n    let name = cname + \"=\";\n    let ca = document.cookie.split(';');\n    for (let i = 0; i < ca.length; i++) {\n        let c = ca[i];\n        while (c.charAt(0) == ' ') c = c.substring(1);\n        if (c.indexOf(name) != -1) return c.substring(name.length, c.length);\n    }\n\n    return \"\";\n}\n\n/* 清除某个cookie */\nfunction clearCookie(site: string, name: string) {\n    setCookie(site, name, \"\", -1);\n}\n\n/**\n  * @date 2020-07-09\n  * @author saltire\n  * @description 解析 HTTP Cookie 标头字符串并返回所有 cookie 的 name-value 对的对象\n  * @return (object)\n*/\nfunction parseCookie() {\n    return document.cookie\n        .split(';')\n        .map(v => v.split('='))\n        .reduce((acc: any, v) => {\n            acc[decodeURIComponent(v[0].trim())] = decodeURIComponent(v[1].trim());\n            return acc;\n        }, {});\n}\nconst cookie: cookieInterface = {\n    setCookie,\n    getCookie,\n    clearCookie,\n    parseCookie,\n}\n\ninterface cookieInterface {\n    /**\n     * 给站点设置 cookie\n     * @param site - 站点的域名（无需 www）\n     * @param cname - cookie 的键\n     * @param cvalue - cookie 的值\n     * @param exdays - 失效时间，以天为单位\n     * @example setCookie('example.com', 'foo', 'bar', 3)\n     */\n    setCookie: (site: string, cname: string, cvalue: string, exdays: number) => void\n    /**\n     * 获取 cookie\n     * @param cname - cookie 的键\n     * @example getCookie('foo') === \"bar\"\n     */\n    getCookie: (cname: string) => string\n    /**\n     * 清除某个 cookie\n     * @param site - 站点的域名\n     * @param name - cookie 的键\n     * @example clearCookie('example.com', 'foo')\n     */\n    clearCookie: (site: string, name: string) => void\n    /**\n     * 解析 HTTP Cookie 标头字符串并返回所有 cookie 的 name-value 对的对象\n     * @example parseCookie() === {foo: \"1\", bar: \"2\"}\n     */\n    parseCookie: () => Object\n}\n\nexport {\n    cookie,\n    cookieInterface\n}","/**\n  * @date 2020-06-19\n  * @author saltire\n  * @description 判断指定日期是否在指定的开始日期和结束日期之间\n  * @param (date, 指定日期) (start, 开始时间) （end， 结束时间）\n  * @return boolean true false\n  * @example isDuringDate('2019-02-01', 2019-01-02', '2020-08-01') => true\n*/\nfunction between(d: potentialDate, s: potentialDate, e: potentialDate): boolean {\n    let date = new Date(d);\n    let start = new Date(s);\n    let end = new Date(e);\n    let t = date.getTime();\n\n    return start.getTime() <= t && t <= end.getTime();\n}\n\n// 日期格式化工具函数\nfunction renderDate(d: potentialDate, f?: string): string {\n    let date = new Date(d);\n    let fmt = f || 'yyyy-MM-dd';\n    let o: AnyObject = {\n        \"M+\": date.getMonth() + 1, //月份         \n        \"d+\": date.getDate(), //日         \n        \"h+\": date.getHours() % 12 == 0 ? 12 : date.getHours() % 12, //小时         \n        \"H+\": date.getHours(), //小时         \n        \"m+\": date.getMinutes(), //分         \n        \"s+\": date.getSeconds(), //秒         \n        \"q+\": Math.floor((date.getMonth() + 3) / 3), //季度         \n        \"S\": date.getMilliseconds() //毫秒         \n    };\n    const week: AnyObject = {\n        \"0\": \"/u65e5\",\n        \"1\": \"/u4e00\",\n        \"2\": \"/u4e8c\",\n        \"3\": \"/u4e09\",\n        \"4\": \"/u56db\",\n        \"5\": \"/u4e94\",\n        \"6\": \"/u516d\"\n    };\n    if (/(y+)/.test(fmt)) {\n        fmt = fmt.replace(RegExp.$1, (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n    }\n    if (/(E+)/.test(fmt)) {\n        fmt = fmt.replace(RegExp.$1, ((RegExp.$1.length > 1) ? (RegExp.$1.length > 2 ? \"/u661f/u671f\" : \"/u5468\") : \"\") + week[date.getDay() + \"\"]);\n    }\n    for (let k in o) {\n        if (new RegExp(\"(\" + k + \")\").test(fmt)) {\n            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\n        }\n    }\n    return fmt;\n}\n\n/* 判断两个日期是否相等 */\nfunction isEqual(d1: potentialDate, d2: potentialDate): boolean {\n    let date1 = new Date(d1);\n    let date2 = new Date(d2);\n    if (date1 && date2) {\n        return (date1.getTime() === date2.getTime());\n    }\n    return !(date1 || date2);\n}\n\n/* 判断是否是闰年 */\nfunction isLeapYear(d: potentialDate): boolean {\n    let date = new Date(d);\n    let year = date.getFullYear();\n    return !!((year & 3) == 0 && (year % 100 || (year % 400 == 0 && year)));\n}\n\n/* 返回指定年月的第一天是星期几，返回值是1-7的数字 */\nfunction getFirstDayOfMonth(d: potentialDate): number {\n    let date = new Date(d);\n    let day = (date.getDay() - (date.getDate() - 1)) % 7;\n    return (day < 0) ? (day + 7) : day;\n}\n\n/* 返回指定月份的最后一天是星期几，返回值是1-7的数字 */\nfunction getLastDayOfMonth(d: potentialDate): number {\n    let date = new Date(d);\n    return new Date(getLastDateOfMonth(date)).getDay();\n}\n\n/* 返回指定年月第一天的日期 */\nfunction getFirstDateOfMonth(d: potentialDate): string {\n    let date = new Date(d);\n    return renderDate(new Date(date.getFullYear(), date.getMonth(), 1));\n}\n\n/* 返回指定年月最后一天的日期 */\nfunction getLastDateOfMonth(d: potentialDate): string {\n    let date = new Date(d);\n    return renderDate(new Date(date.getFullYear(), date.getMonth(), getDaysInMonth(date)));\n}\n\n/* 获取指定月份的天数 */\nlet getDaysInMonth = (function () {\n    let daysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n    return function (d: potentialDate): number {\n        let date = new Date(d);\n        let m = date.getMonth();\n\n        return m == 1 && isLeapYear(date) ? 29 : daysInMonth[m];\n    };\n}())\n\n/* 给指定日期增加指定天数 */\nfunction addDays(d: potentialDate, days: number): Date {\n    let date = new Date(d);\n    let t_s = date.getTime();//转化为时间戳毫秒数\n\n    date.setTime(t_s + 1000 * 60 * 60 * 24 * parseInt(String(days)));\n\n    return date;\n}\n\n/* 给指定日期增加指定小时 */\nfunction addHours(d: potentialDate, hours: number): Date {\n    let date = new Date(d);\n    let t_s = date.getTime();//转化为时间戳毫秒数\n\n    date.setTime(t_s + 1000 * 60 * 60 * parseInt(String(hours)));\n\n    return date;\n}\n\n/* 将时间转为时间戳，按当天最初一刻 */\nfunction timeStartChange(t: potentialDate): number {\n    var d = new Date(t);\n    var datetime = d.getFullYear() + '-' + (d.getMonth() + 1) + '-' + d.getDate() + '  00:00:00';\n    var aa = new Date(datetime);\n    var c = aa.getTime()\n    return c\n}\n\n/* 将时间转为时间戳，按当天最后一刻 */\nfunction timeEndChange(t: potentialDate): number {\n    var d = new Date(t);\n    var datetime = d.getFullYear() + '-' + (d.getMonth() + 1) + '-' + d.getDate() + '  23:59:59';\n    var aa = new Date(datetime);\n    var c = aa.getTime()\n    return c\n}\n\ninterface dateObject {\n    day: number,\n    hour: number,\n    min: number,\n    ms: number\n}\n\n// 获取时间差,提供两个时间戳，返回一个对象,为负数表示当前time1比time2小\nfunction timeDifference(time1: number, time2: number): dateObject {\n    let s1 = time1;\n    let s2 = time2;\n    let total = parseInt(String((s2 - s1) / 1000));\n    let day = parseInt(String(total / (24 * 60 * 60))); //计算整数天数\n    let afterDay = total - day * 24 * 60 * 60; //取得算出天数后剩余的秒数\n    let hour = parseInt(String(afterDay / (60 * 60))); //计算整数小时数\n    let afterHour = total - day * 24 * 60 * 60 - hour * 60 * 60; //取得算出小时数后剩余的秒数\n    let min = parseInt(String(afterHour / 60)); //计算整数分\n    let afterMin = total - day * 24 * 60 * 60 - hour * 60 * 60 - min * 60; //取得算出分后剩余的秒数\n\n    return {\n        day,\n        hour,\n        min,\n        ms: afterMin\n    }\n}\n\nconst date: dateInterface = {\n    between,\n    renderDate,\n    isEqual,\n    isLeapYear,\n    getFirstDayOfMonth,\n    getFirstDateOfMonth,\n    getLastDateOfMonth,\n    getLastDayOfMonth,\n    getDaysInMonth,\n    addDays,\n    addHours,\n    timeStartChange,\n    timeEndChange,\n    timeDifference\n}\n\ninterface dateInterface {\n    /**\n     * 判断指定日期是否在指定的开始日期和结束日期之间\n     * @param date - 指定日期\n     * @param start - 开始日期\n     * @param end - 结束日期\n     */\n    between: (date: potentialDate, start: potentialDate, end: potentialDate) => boolean\n\n    /**\n     * 日期格式化工具函数\n     * @param date - 需要格式化的日期\n     * @param format - 格式化规则\n     * @example renderDate(1614564487401, 'yyyy-MM-dd HH:mm')\n     */\n    renderDate: (date: potentialDate, format?: string) => string\n\n    /**\n     * 判断两个日期是否相等\n     * @param date1 - 日期 1\n     * @param date2 - 日期 2\n     */\n    isEqual: (date1: potentialDate, date2: potentialDate) => boolean\n\n    /**\n     * 判断是否是闰年\n     * @example date - 需要判断的日期\n     */\n    isLeapYear: (date: potentialDate) => boolean\n\n    /**\n     * 返回指定年月的第一天是星期几，返回值是1-7的数字\n     * @param date - 指定的日期\n     */\n    getFirstDayOfMonth: (date: potentialDate) => number\n\n    /**\n     * 返回指定月份的最后一天是星期几，返回值是1-7的数字\n     * @param date - 指定的日期\n     */\n    getLastDayOfMonth: (date: potentialDate) => number\n\n    /**\n     * 返回指定年月第一天的日期\n     * @param date - 指定的年月\n     */\n    getFirstDateOfMonth: (date: potentialDate) => string\n\n    /**\n     * 返回指定年月最后一天的日期\n     * @param date - 指定的年月\n     */\n    getLastDateOfMonth: (date: potentialDate) => string\n\n    /**\n     * 获取指定月份的天数\n     * @param date - 指定的年月\n     */\n    getDaysInMonth: (date: potentialDate) => number\n\n    /**\n     * 给指定日期增加指定天数\n     * @param date - 指定的日期\n     * @param days - 要增加的天数\n     */\n    addDays: (date: potentialDate, days: number) => Date \n\n    /**\n     * 给指定日期增加指定小时\n     * @param date - 指定的日期\n     * @param hours - 要增加的小时\n     */\n    addHours: (date: potentialDate, hours: number) => Date\n\n    /**\n     * 将时间转为时间戳，按当天最初一刻\n     * @param date - 指定的日期\n     */\n    timeStartChange: (date: potentialDate) => number\n\n    /**\n     * 将时间转为时间戳，按当天最后一刻 \n     * @param date - 指定的日期\n     */\n    timeEndChange: (date: potentialDate) => number\n\n    /**\n     * 获取时间差,提供两个时间戳，返回一个对象,为负数表示当前time1比time2小\n     * @param time1 - 第一个时间的时间戳\n     * @param time2 - 第二个时间的时间戳\n     */\n    timeDifference: (time1: number, time2: number) => dateObject \n}\n\nexport {\n    dateInterface,\n    date\n}\n","/**\n * 平滑滚动到页面顶部。\n * 使用 document.documentElement.scrollTop 或 document.body.scrollTop 获取到顶部距离。\n * 从顶部滚动一小部分距离。使用window.requestAnimationFrame() 来实现滚动动画。\n */\nfunction scrollToTop() {\n    try {\n        const c = document.documentElement.scrollTop || document.body.scrollTop;\n\n        if (c > 0) {\n            window.requestAnimationFrame(scrollToTop);\n            window.scrollTo(0, c - c / 8);\n        }\n    } catch {\n        return\n    }\n}\n\n/**\n  * @date 2020-07-09\n  * @author saltire\n  * @description 如果指定的元素在可视窗口中可见，则返回 true ，否则返回 false \n  * @param （指定元素，el）（省略第二个参数来判断元素是否完全可见，或者指定 true 来判断它是否部分可见，bolean）\n  * @return boolean\n*/\nfunction elementIsVisibleInViewport(el: Element, partiallyVisible = false): boolean {\n    try {\n        const { top, left, bottom, right } = el.getBoundingClientRect();\n        const { innerHeight, innerWidth } = window;\n        return partiallyVisible\n            ? ((top > 0 && top < innerHeight) || (bottom > 0 && bottom < innerHeight)) &&\n            ((left > 0 && left < innerWidth) || (right > 0 && right < innerWidth))\n            : top >= 0 && left >= 0 && bottom <= innerHeight && right <= innerWidth;\n    } catch {\n        return false\n    }\n}\n\n// 判断是否是火狐内核\nfunction isgecko(): boolean {\n    let u:string\n\n    try {\n        u = window.navigator && window.navigator.userAgent\n    } catch {\n        u = ''\n    }\n\n    return u.indexOf('Gecko') > -1 && u.indexOf('KHTML') == -1;\n}\n\n// 判断是否是 QQ 浏览器\nfunction isqq(): boolean {\n    let u:string\n\n    try {\n        u = window.navigator && window.navigator.userAgent\n    } catch {\n        u = ''\n    }\n\n    return u.indexOf('mqqbrowser') > -1\n}\n\n// 判断是否是 QQ 浏览器\nfunction isweixin(): boolean {\n    let u:string\n\n    try {\n        u = window.navigator && window.navigator.userAgent\n    } catch {\n        u = ''\n    }\n\n    return u.indexOf('MicroMessenger') > -1\n}\n\n// 判断是pc端还是移动端\nfunction ispc():boolean {\n\ttry {\n\t\tvar userAgentInfo = window.navigator && window.navigator.userAgent\n\t} catch {\n\t\tvar userAgentInfo = ''\n\t}\n\tlet Agents = [\n\t\t\"Android\",\n\t\t\"iPhone\",\n\t\t\"SymbianOS\",\n\t\t\"Windows Phone\",\n\t\t\"iPad\",\n\t\t\"iPod\"\n\t];\n\tlet flag = true;\n\tfor (let v = 0; v < Agents.length; v++) {\n\t\tif (userAgentInfo.indexOf(Agents[v]) > 0) {\n\t\t\tflag = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn flag;\n}\n\ninterface deviceInterface {\n    /**\n     * 平滑滚动到页面顶部\n     */\n    scrollToTop: () => void\n\n    /**\n     * 如果指定的元素在可视窗口中可见，则返回 true ，否则返回 false \n     * @param el - 需要判断的元素\n     * @param partiallyVisible - 是否部分可见，指定为 true 则表示只有元素完全可见才返回 true\n     */\n    elementIsVisibleInViewport: (el: Element, partiallyVisible: boolean) => boolean\n\n    /**\n     * 判断是否处于浏览器环境中\n     */\n    inBrowser: () => boolean\n\n    /**\n     * 判断是否是 IE 浏览器\n     */\n    isIE: () => boolean\n\n    /**\n     * 判断是否是 IE9 浏览器\n     */\n    isIE9: () => boolean\n\n    /**\n     * 判断是否是 Edge 浏览器\n     */\n    isEdge: () => boolean\n\n    /**\n     * 判断是否是安卓环境\n     */\n    isAndroid: () => boolean\n\n    /**\n     * 判断是否是 IOS 环境\n     */\n    isIOS: () => boolean\n\n    /**\n     * 判断是否是谷歌浏览器\n     */\n    isChrome: () => boolean\n\n    /**\n     * 判断是否是火狐浏览器\n     */\n    isgecko: () => boolean\n    \n    /**\n     * 判断是否是 QQ 浏览器\n     */\n    isqq: () => boolean\n    \n    /**\n     * 判断是 pc 端还是移动端\n     */\n    ispc: () => boolean\n\n    /**\n     * 判断是否是微信环境\n     */\n    isweixin: () => boolean\n}\n\nconst device: deviceInterface = {\n    scrollToTop,\n    elementIsVisibleInViewport,\n    inBrowser,\n    isIE,\n    isIE9,\n    isEdge,\n    isAndroid,\n    isIOS,\n    isChrome,\n    isgecko,\n    isqq,\n    ispc,\n    isweixin\n}\n\n// Browser environment sniffing\nfunction inBrowser(): boolean {\n    return typeof window !== 'undefined'\n}\n\n// 返回浏览器的 user-agent\nfunction getUA(): string {\n    if (inBrowser()) {\n        return window.navigator.userAgent.toLowerCase()\n    }\n\n    return ''\n}\n\n/**\n * 判断是否是 IE 浏览器\n */\nfunction isIE(): boolean {\n    if (getUA()) {\n        return /msie|trident/.test(getUA())\n    }\n    return false\n}\n\n/**\n * 判断是否是 IE9 浏览器\n */\nfunction isIE9(): boolean {\n    if (getUA()) {\n        return getUA().indexOf('msie 9.0') > 0\n    }\n    return false\n}\n\n/**\n * 判断是否是 Edge 浏览器\n */\nfunction isEdge(): boolean {\n    if (getUA()) {\n        return getUA().indexOf('edge/') > 0\n    }\n    return false\n}\n\n/**\n * 判断是否是安卓环境\n */\nfunction isAndroid(): boolean {\n    if (getUA()) {\n        return getUA().indexOf('android') > 0\n    }\n    return false\n}\n\n/**\n * 判断是否是 IOS 环境\n */\nfunction isIOS(): boolean {\n    if (getUA()) {\n        return /iphone|ipad|ipod|ios/.test(getUA())\n    }\n    return false\n}\n\n/**\n * 判断是否是 IOS 环境\n */\nfunction isChrome(): boolean {\n    if (getUA()) {\n        return /chrome\\/\\d+/.test(getUA()) && !isEdge\n    }\n    return false\n}\n\nexport {\n    device,\n    deviceInterface\n}","/**\n * @author jxye\n * @date 2020/3/11\n * @Description: 判断元素是否含有某个class\n * @example: hasClass(document.getElementById('content-toc'), 'content-toc') => true或false\n*/\nfunction hasClass(element: Element, className: string): boolean {\n    if (!element || !className) {\n        throw new Error(\"arguments error\");\n    }\n    if (element.classList.contains(className)) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * @author jxye\n * @date 2020/3/11\n * @Description: 原生js操作元素class的方法，给元素添加class，支持不定长参数\n*/\nfunction addClass(element: Element): void {\n    if (!element || arguments.length <= 1) {\n        throw new Error(\"arguments error\");\n    }\n\n    let argus = Array.from ? Array.from(arguments) : Array.prototype.slice.call(arguments);\n\n    if (element) {\n        argus.splice(0, 1);\n    }\n\n    for (let i = 0; i < argus.length; i++) {\n        if (!element.classList.contains(argus[i])) {\n            element.classList.add(argus[i]);\n        }\n    }\n}\n\n/**\n * @author jxye\n * @date 2020/3/11\n * @Description: 原生js操作元素class的方法，删除元素的class，支持不定长参数\n*/\nfunction removeClass(element: Element): void {\n    if (!element || arguments.length <= 1) {\n        throw new Error(\"arguments error\");\n    }\n    let argus = Array.from ? Array.from(arguments) : Array.prototype.slice.call(arguments);\n\n    if (element) {\n        argus.splice(0, 1);\n    }\n    for (let i = 0; i < argus.length; i++) {\n        if (element.classList.contains(argus[i])) {\n            element.classList.remove(argus[i]);\n        }\n    }\n}\n\n/**\n * 返回整个 html文档的 scrollTop 值\n * @returns number\n */\nfunction getScrollTop() {\n    return Math.max(document.body.scrollTop, document.documentElement.scrollTop)\n}\n\n/**\n * 返回整个 html文档的 scrollLeft 值\n * @returns number\n */\nfunction getScrollLeft() {\n    return Math.max(document.body.scrollLeft, document.documentElement.scrollLeft)\n}\n\n/**\n * 获取元素距页面高度\n * @param el - 指定的元素\n * @returns  number - 元素距离页面的高度\n */\nfunction getElementTop(el: HTMLElement): number {\n    let actualTop = el.offsetTop\n    let current: HTMLElement | null = el.offsetParent as HTMLElement\n\n    while (current !== null) {\n        actualTop += current.offsetTop\n        current = current.offsetParent as HTMLElement\n    }\n\n    return actualTop;\n}\n\n/**\n * 获取整个网页的实际高度与宽度\n * @returns 返回一个具有 width 和 height 属性的对象或者返回 null\n */\nfunction getPagearea():ObjectWidthHeight | null {\n    try {\n        return {\n            width: Math.max(document.documentElement.scrollWidth, document.documentElement.clientWidth),\n            height: Math.max(document.documentElement.scrollHeight, document.documentElement.clientHeight)\n        }\n    } catch (error) {\n        return null\n    }\n}\n\ninterface ObjectWidthHeight {\n    width: number\n    height: number\n}\n\n\ninterface domInterface {\n    /**\n     * 判断元素是否含有某个class\n     * @param element - 指定的元素\n     * @param className - class 名称\n     * @example hasClass(document.getElementById('content-toc'), 'content-toc') => true 或 false\n     */\n    hasClass: (element: Element, className: string) => boolean\n\n    /**\n     * 原生js操作元素class的方法，给元素添加class，支持不定长参数\n     * @param element - 指定的元素\n     */\n    addClass(element: Element): void\n\n    /**\n     * 原生js操作元素class的方法，删除元素的class，支持不定长参数\n     * @param element - 指定的元素\n     */\n    removeClass(element: Element): void\n\n    /**\n     * 返回整个 html文档的 scrollLeft 值\n     * @returns number\n     */\n    getScrollLeft(): number\n\n    /**\n     * 返回整个 html文档的 scrollTop 值\n     * @returns number\n     */\n    getScrollTop(): number\n\n    /**\n     * 获取元素距页面高度\n     * @param el - 指定的元素\n     * @returns  number - 元素距离页面的高度\n     */\n    getElementTop(el: HTMLElement): number\n\n    /**\n     * 获取整个网页的实际高度与宽度\n     * @returns 返回一个具有 width 和 height 属性的对象或者返回 null\n     */\n    getPagearea():ObjectWidthHeight | null\n}\n\nconst dom: domInterface = {\n    hasClass,\n    addClass,\n    removeClass,\n    getScrollLeft,\n    getScrollTop,\n    getElementTop,\n    getPagearea\n}\n\nexport {\n    dom,\n    domInterface\n}","import { common, commonInterface } from './common'\nimport { cookie, cookieInterface } from './cookie'\nimport { date, dateInterface } from './date'\nimport { device, deviceInterface } from './device'\nimport { dom, domInterface } from './dom'\nimport { check, checkInterface } from './regexp'\nimport { str, stringInterface } from './string'\nimport { url, urlInterface } from './url'\nimport { name, version } from '../package.json'\n\ninterface saltireUtilInterface extends commonInterface, cookieInterface, dateInterface, deviceInterface, domInterface, checkInterface, stringInterface, urlInterface {\n    version: string,\n    name: string\n}\n\nconst saltireUtil: saltireUtilInterface = Object.assign({ name, version }, cookie, common, date, device, dom, check, str, url)\n\nexport default saltireUtil","interface regObject {\n    [propName: string]: RegExp;\n}\n\nconst reg: regObject = {\n    // 网址(url,支持端口和\"?+参数\"和\"#+参数)\n    url: /^(((ht|f)tps?):\\/\\/)?[\\w-]+(\\.[\\w-]+)+([\\w.,@?^=%&:/~+#-]*[\\w@?^=%&/~+#-])?$/,\n\n    // 视频(video)链接地址（视频格式可按需增删）\n    video_url: /^https?:\\/\\/(.+\\/)+.+(\\.(swf|avi|flv|mpg|rm|mov|wav|asf|3gp|mkv|rmvb|mp4))$/i,\n\n    // 图片(image)链接地址（图片格式可按需增删）\n    img_url: /^https?:\\/\\/(.+\\/)+.+(\\.(gif|png|jpg|jpeg|webp|svg|psd|bmp|tif))$/i,\n\n    // 24小时制时间（HH:mm:ss）\n    time_24: /^(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d$/,\n\n    // 12小时制时间（hh:mm:ss）\n    time_12: /^(?:1[0-2]|0?[1-9]):[0-5]\\d:[0-5]\\d$/,\n\n    // base64格式\n    base64: /^\\s*data:(?:[a-z]+\\/[a-z0-9-+.]+(?:;[a-z-]+=[a-z0-9-]+)?)?(?:;base64)?,([a-z0-9!$&',()*+;=\\-._~:@/?%\\s]*?)\\s*$/i,\n\n    // 数字/货币金额（支持负数、千分位分隔符）\n    money: /^-?\\d+(,\\d{3})*(\\.\\d{1,2})?$/,\n\n    // 银行卡号（10到30位, 覆盖对公/私账户, 参考微信支付）\n    bank_card: /^[1-9]\\d{9,29}$/,\n\n    // 中文姓名\n    name_chinese: /^(?:[\\u4e00-\\u9fa5·]{2,16})$/,\n\n    // 车牌号(新能源+非新能源)\n    license_plate: /^(?:[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领 A-Z]{1}[A-HJ-NP-Z]{1}(?:(?:[0-9]{5}[DF])|(?:[DF](?:[A-HJ-NP-Z0-9])[0-9]{4})))$|(?:[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领 A-Z]{1}[A-Z]{1}[A-HJ-NP-Z0-9]{4}[A-HJ-NP-Z0-9 挂学警港澳]{1})$/,\n\n    // md5格式(32位)\n    md5: /^([a-f\\d]{32}|[A-F\\d]{32})$/,\n\n    // 手机号(mobile phone)中国(严谨), 根据工信部2019年最新公布的手机号段\n    phone_rigorous: /^(?:(?:\\+|00)86)?1(?:(?:3[\\d])|(?:4[5-7|9])|(?:5[0-3|5-9])|(?:6[5-7])|(?:7[0-8])|(?:8[\\d])|(?:9[1|8|9]))\\d{8}$/,\n\n    // 手机号(mobile phone)中国(宽松), 只要是13,14,15,16,17,18,19开头即可\n    phone_loose: /^(?:(?:\\+|00)86)?1[3-9]\\d{9}$/,\n\n    // 日期 支持2020-01-02和2020/01/02这两种形式\n    date: /^\\d{4}(-|\\/)(1[0-2]|0?\\d)\\1([0-2]\\d|\\d|30|31)$/,\n\n    // 邮箱\n    email: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n\n    // 座机(tel phone)电话(国内),如: 0341-86091234\n    tel: /^\\d{3}-\\d{8}$|^\\d{4}-\\d{7,8}$/,\n\n    // 身份证号(2代,18位数字),最后一位是校验位,可能为数字或字符X\n    id_card: /^[1-9]\\d{5}(?:18|19|20)\\d{2}(?:0[1-9]|10|11|12)(?:0[1-9]|[1-2]\\d|30|31)\\d{3}[\\dXx]$/,\n\n    // 护照（包含香港、澳门）\n    passports: /(^[EeKkGgDdSsPpHh]\\d{8}$)|(^(([Ee][a-fA-F])|([DdSsPp][Ee])|([Kk][Jj])|([Mm][Aa])|(1[45]))\\d{7}$)/,\n\n    // 用户名校验，4到16位（字母，数字，下划线，减号）\n    username: /^[a-zA-Z0-9_-]{4,16}$/,\n\n    // 中文/汉字\n    chinese: /^(?:[\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uFA0E\\uFA0F\\uFA11\\uFA13\\uFA14\\uFA1F\\uFA21\\uFA23\\uFA24\\uFA27-\\uFA29]|[\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0])+$/,\n\n    // 小数\n    decimal: /^\\d+\\.\\d+$/,\n\n    // qq号码格式\n    qq_number: /^[1-9][0-9]{4,10}$/,\n\n    // 密码强度校验，最少6位，包括至少1个大写字母，1个小写字母，1个数字，1个特殊字符\n    password: /^\\S*(?=\\S{6,})(?=\\S*\\d)(?=\\S*[A-Z])(?=\\S*[a-z])(?=\\S*[!@#$%^&*? ])\\S*$/,\n\n    // ipv4地址\n    ip_v4: /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,\n\n    // 十六进制颜色\n    color_16: /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/,\n\n    // 微信号\n    wx_username: /^[a-zA-Z][-_a-zA-Z0-9]{5,19}$/,\n\n    // 邮政编码（中国）\n    zip_code: /^(0[1-7]|1[0-356]|2[0-7]|3[0-6]|4[0-7]|5[1-7]|6[1-7]|7[0-5]|8[013-6])\\d{4}$/,\n}\n\n\n/**\n  * @date 2020-06-19\n  * @author saltire\n  * @description 常用正则表达式的验证\n  * @param （string，待验证的字符串）\n  * @return （boolean，验证结果）\n  * @example  check.isphone_loose('19121673570') => true\n*/\nlet checkType = function (s: string, r: RegExp) {\n    let regNew = new RegExp(r);\n\n    return regNew.test(s);\n}\n\nconst check: checkInterface = {\n\n}\n\nObject.keys(reg).forEach(function (t) {\n    check[\"is\" + t] = function (params: string) {\n        return checkType(params, reg[t]);\n    }\n});\n\ninterface checkInterface {\n    [propName: string]: any\n    /**\n     * 网址(url,支持端口和\"?+参数\"和\"#+参数)\n     * @param param 待判定数据类型\n     */\n    isurl?: (param: any) => boolean\n    /**\n     * 视频(video)链接地址（视频格式可按需增删）\n     * @param param 待判定数据类型\n     */\n    isvideo_url?: (param: any) => boolean\n    /**\n     * 图片(image)链接地址（图片格式可按需增删）\n     * @param param 待判定数据类型\n     */\n    isimg_url?: (param: any) => boolean\n    /**\n     * 24小时制时间（HH:mm:ss）\n     * @param param 待判定数据类型\n     */\n    istime_24?: (param: any) => boolean\n    /**\n     * 12小时制时间（hh:mm:ss）\n     * @param param 待判定数据类型\n     */\n    istime_12?: (param: any) => boolean\n    /**\n     * base64格式\n     * @param param 待判定数据类型\n     */\n    isbase64?: (param: any) => boolean\n    /**\n     * 数字/货币金额（支持负数、千分位分隔符）\n     * @param param 待判定数据类型\n     */\n    ismoney?: (param: any) => boolean\n    /**\n     * 银行卡号（10到30位, 覆盖对公/私账户, 参考微信支付）\n     * @param param 待判定数据类型\n     */\n    isbank_card?: (param: any) => boolean\n    /**\n     * 中文姓名\n     * @param param 待判定数据类型\n     */\n    isname_chinese?: (param: any) => boolean\n    /**\n     * 车牌号(新能源+非新能源)\n     * @param param 待判定数据类型\n     */\n    islicense_plate?: (param: any) => boolean\n    /**\n     * md5格式(32位)\n     * @param param 待判定数据类型\n     */\n    ismd5?: (param: any) => boolean\n    /**\n     * 手机号(mobile phone)中国(严谨), 根据工信部2019年最新公布的手机号段\n     * @param param 待判定数据类型\n     */\n    isphone_rigorous?: (param: any) => boolean\n    /**\n     * 手机号(mobile phone)中国(宽松), 只要是13,14,15,16,17,18,19开头即可\n     * @param param 待判定数据类型\n     */\n    isphone_loose?: (param: any) => boolean\n    /**\n     * 日期 支持2020-01-02和2020/01/02这两种形式\n     * @param param 待判定数据类型\n     */\n    isdate?: (param: any) => boolean\n    /**\n     * 邮箱\n     * @param param 待判定数据类型\n     */\n    isemail?: (param: any) => boolean\n    /**\n     * 座机(tel phone)电话(国内),如: 0341-86091234\n     * @param param 待判定数据类型\n     */\n    istel?: (param: any) => boolean\n    /**\n     * 身份证号(2代,18位数字),最后一位是校验位,可能为数字或字符X\n     * @param param 待判定数据类型\n     */\n    isid_card?: (param: any) => boolean\n    /**\n     * 护照（包含香港、澳门）\n     * @param param 待判定数据类型\n     */\n    ispassports?: (param: any) => boolean\n    /**\n     * 用户名校验，4到16位（字母，数字，下划线，减号）\n     * @param param 待判定数据类型\n     */\n    isusername?: (param: any) => boolean\n    /**\n     * 中文/汉字\n     * @param param 待判定数据类型\n     */\n    ischinese?: (param: any) => boolean\n    /**\n     * 小数\n     * @param param 待判定数据类型\n     */\n    isdecimal?: (param: any) => boolean\n    /**\n     * qq号码格式\n     * @param param 待判定数据类型\n     */\n    isqq_number?: (param: any) => boolean\n    /**\n     * 密码强度校验，最少6位，包括至少1个大写字母，1个小写字母，1个数字，1个特殊字符\n     * @param param 待判定数据类型\n     */\n    ispassword?: (param: any) => boolean\n    /**\n     * ipv4地址\n     * @param param 待判定数据类型\n     */\n    isip_v4?: (param: any) => boolean\n    /**\n     * 十六进制颜色\n     * @param param 待判定数据类型\n     */\n    iscolor_16?: (param: any) => boolean\n    /**\n     * 微信号\n     * @param param 待判定数据类型\n     */\n    iswx_username?: (param: any) => boolean\n    /**\n     * 邮政编码（中国）\n     * @param param 待判定数据类型\n     */\n    iszip_code?: (param: any) => boolean\n}\n\nexport {\n    check,\n    checkInterface\n}\n","/**\n * @author jxye\n * @date 2020/3/11\n * @Description: 英文字符串依序转驼峰，处理过程中遇见非英文字母字符，全部当做空格处理，其余依序拼装\n * @example: _.camelCase('Foo Bar'); => 'fooBar'\n * @example: _.camelCase('--foo-bar--'); => 'fooBar'\n * @example:  _.camelCase('FOO BAR QI#ZH');  => 'fooBarQiZh'\n*/\nfunction camelCase(string: string): (string | object) {\n    let error,\n        result = [],\n        stringArray = string.split(\"\"),\n        isLowerCase,\n        nextUpperCase = false,\n        isCase,\n        start = string.search(/([a-zA-Z])/) + 1,\n        regCase = /^[a-zA-Z]$/,\n        regLowerCase = /^[a-z]$/;\n\n    if (!string) {\n        error = \"camelCase调用时参数不能为空\";\n    }\n\n    if ((start - 1) >= 0) {\n        // 推入首个字母，首个字母必须小写\n        result.push(stringArray[start - 1].toLowerCase());\n\n        for (let i = start; i < stringArray.length; i++) {\n            let singleString = stringArray[i];\n            let thisUpperCase = nextUpperCase;\n            isCase = regCase.test(singleString);\n            nextUpperCase = false;\n\n            if (isCase) {\n                isLowerCase = regLowerCase.test(singleString);\n                if (thisUpperCase === false) {\n                    result.push(singleString.toLowerCase());\n                } else {\n                    result.push(singleString.toUpperCase());\n                }\n            } else {\n                nextUpperCase = true;\n            }\n        }\n    }\n\n    if (error) {\n        return new Error(error);\n    } else if (result && result.length) {\n        return result.join(\"\");\n    }\n\n    return string;\n}\n\n/**\n * @author jxye\n * @date 2020/3/11\n * @Description: 判断某个字符串是否以某特殊字符结尾,尾部空格会被忽略\n * @example: endsWith(\"foobar\", \"bar\") // true   endsWith(\"foobar\", \"foo\") // false\n*/\nfunction endsWith(str: string, match: string): (boolean | object) {\n    if (!str || !match) {\n        return new Error(\"endsWith函数调用时参数不能为空\");\n    }\n\n    if (str === match) {\n        return true;\n    }\n\n    let reg = new RegExp(match.replace(/\\s*$/g, \"\") + \"$\");\n\n    return reg.test(str.replace(/\\s*$/g, \"\"));\n}\n\n/**\n * @author jxye\n * @date 2020/3/11\n * @Description: 判断某个字符串是否以某特殊字符开头,头部空格会被忽略\n * @example: startsWith(\"foobar\", \"fo\") // true startsWith(\"foobar\", \"v\") // false\n */\nfunction startsWith(string: string, match: string): (boolean | object) {\n    if (!string || !match) {\n        return new Error(\"startsWith函数调用时参数不能为空\");\n    }\n\n    if (string === match) {\n        return true;\n    }\n\n    let reg = new RegExp(\"^\" + match.replace(/^\\s*/g, \"\"));\n\n    return reg.test(string.replace(/^\\s*/g, \"\"));\n}\n\n/* 生成随机字符串 */\nfunction randomString(): string {\n    return Math.random().toString(36).substr(2);\n}\n\n/**\n  * @date 2020-06-19\n  * @author saltire\n  * @description 隐藏号码的中间一部分，常见的是隐藏中间四位\n  * @param (str：号码)，(frontLen：前面的号码显示数量)，(endLen：后面的号码显示数量)\n  * @return string\n  * @example hiddenNumber('13901342187', 3, 4) => 139****2187\n*/\nfunction hiddenNumber(str: string, frontLen: number, endLen: number): string {\n    var len = str.length - frontLen - endLen;\n    var xing = '';\n    for (var i = 0; i < len; i++) {\n        xing += '*';\n    }\n    return str.substring(0, frontLen) + xing + str.substring(str.length - endLen);\n}\n\n// 生成一个[min, max]之间的随机数\nfunction randomNumber(min: number, max: number): number {\n    return parseInt(String(Math.random() * (max - min + 1) + min), 10);\n}\n\ninterface stringInterface {\n    /**\n     * 英文字符串依序转驼峰，处理过程中遇见非英文字母字符，全部当做空格处理，其余依序拼装\n     * @param string - 待处理的字符串\n     * @example _.camelCase('Foo Bar'); => 'fooBar'\n     * @example _.camelCase('--foo-bar--'); => 'fooBar'\n     * @example  _.camelCase('FOO BAR QI#ZH');  => 'fooBarQiZh'\n     */\n    camelCase(string: string): (string | object)\n    /**\n     * 判断某个字符串是否以某特殊字符结尾,尾部空格会被忽略\n     * @param str - 整个字符串\n     * @param match - 特殊字符\n     * @example endsWith(\"foobar\", \"bar\") // true   endsWith(\"foobar\", \"foo\") // false\n     */\n    endsWith(str: string, match: string): (boolean | object)\n    /**\n     * 判断某个字符串是否以某特殊字符开头,头部空格会被忽略\n     * @param string - 整个字符串\n     * @param match - 特殊字符\n     * @example startsWith(\"foobar\", \"fo\") // true startsWith(\"foobar\", \"v\") // false\n     */\n    startsWith(string: string, match: string): (boolean | object)\n    /**\n     * 生成随机字符串\n     */\n    randomString(): string\n    /**\n     * 隐藏号码的中间一部分，常见的是隐藏中间四位\n     * @param str - 号码\n     * @param frontLen - 前面的号码显示数量\n     * @param endLen - 后面的号码显示数量\n     * @example hiddenNumber('13901342187', 3, 4) => 139****2187\n     */\n    hiddenNumber(str: string, frontLen: number, endLen: number): string\n    /**\n     * 生成一个[min, max]之间的随机数\n     * @param min 最小数\n     * @param max 最大数\n     */\n    randomNumber(min: number, max: number): number\n}\n\nconst str: stringInterface = {\n    camelCase,\n    endsWith,\n    startsWith,\n    randomString,\n    hiddenNumber,\n    randomNumber,\n}\n\nexport {\n    str,\n    stringInterface\n}\n","/* 获取url中的某个参数值 */\nfunction GetQueryString(name: string): (string | null) {\n    try {\n        var reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\");\n        var r = window.location.search.substr(1).match(reg);\n        if (r != null) return unescape(r[2]);\n        return null\n    } catch {\n        return null\n    }\n}\n\n/* 修改url中的某个参数的值，返回新地址 */\nfunction replaceQueryString(paramName: String, replaceWith: string): string {\n    var oUrl = window.location.href.toString();\n    var re = new RegExp('/(' + paramName + '=)([^&]*)/gi');\n    var nUrl = oUrl.replace(re, paramName + '=' + replaceWith);\n    return nUrl;\n}\n\n/* 在URL中追加一个参数 */\nfunction addQueryString(paramName: string, replaceWith: string): (string | null) {\n    try {\n        var url = window.location.href;\n        if (url.indexOf(paramName) > -1) {\n            var re = new RegExp('/(' + paramName + '=)([^&]*)/gi');\n            url = url.replace(re, paramName + '=' + replaceWith);\n        } else {\n            var paraStr = paramName + '=' + replaceWith;\n\n            var idx = url.indexOf('?');\n            if (idx < 0)\n                url += '?';\n            else if (idx >= 0 && idx != url.length - 1)\n                url += '&';\n            url = url + paraStr;\n        }\n        return url;\n    } catch {\n        return null\n    }\n};\n\n/**\n  * @description 是否为绝对地址,如果给定的字符串是绝对URL，则返回 true ；否则返回 false。\n  * @example isAbsoluteURL('https://google.com'); // true\n  * @example isAbsoluteURL('ftp://www.myserver.net'); // true\n  * @example isAbsoluteURL('/foo/bar'); // false\n*/\nfunction isAbsoluteURL(str: string): boolean {\n    return /^[a-z][a-z0-9+.-]*:/.test(str);\n}\n\n\ninterface urlInterface {\n    /**\n     * 获取 url 中的某个参数值 \n     * @param name 参数名\n     */\n    GetQueryString(name: string): (string | null)\n    /**\n     * 修改 url 中的某个参数的值，返回新地址\n     * @param paramName 参数名\n     * @param replaceWith 新的参数值\n     */\n    replaceQueryString(paramName: String, replaceWith: string): string\n    /**\n     * 在 URL 中追加一个参数\n     * @param paramName 追加的参数名\n     * @param replaceWith 追加的参数值\n     */\n    addQueryString(paramName: string, replaceWith: string): (string | null)\n    /**\n     * 是否为绝对地址,如果给定的字符串是绝对 URL\n     * @param str 要判断的地址\n     * @example isAbsoluteURL('https://google.com'); // true\n     * @example isAbsoluteURL('ftp://www.myserver.net'); // true\n     * @example isAbsoluteURL('/foo/bar'); // false\n     */\n    isAbsoluteURL(str: string): boolean\n}\n\nconst url: urlInterface = {\n    GetQueryString,\n    replaceQueryString,\n    addQueryString,\n    isAbsoluteURL,\n}\n\nexport {\n    url,\n    urlInterface\n}"]}